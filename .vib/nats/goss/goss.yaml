file:
  /bitnami/nats/conf/{{ .Vars.natsFilename }}.conf:
    mode: "0644"
    filetype: file
    exists: true
    owner: root
command:
  {{- $subject := printf "subj_%s" (randAlpha 5) }}
  {{- $msg := printf "msg_%s" (randAlpha 5) }}
  {{- $auth := printf "--user=%s --password=%s" .Vars.auth.user .Vars.auth.password }}
  {{- $client_endpoint := printf "-s nats://nats:%d" .Vars.service.ports.client }}
  manage-key:
    ## We need to have the subscriber process running at the same time the publishing is done
    ## The sleep is needed to avoid a race condition where the publishing is done before the subscriber is ready
    ## The subscriber process needs to be killed so there is no dangling process making goss timeout
    exec: ( USER=1001 nats {{ $auth }} {{ $client_endpoint }} sub {{ $subject }}; ) & sleep 3 && USER=1001 nats {{ $auth }} {{ $client_endpoint }} pub {{ $subject }} {{ $msg }} && sleep 3 && pkill -f 'nats '
    ## Goss seems to regard the exit status of this test as unfinished (-1) even though the stdout is correct and the subscriber process is stopped
    exit-status: -1
    stdout:
    - /Received on.*{{ $subject }}/
    - {{ $msg }}
    timeout: 20000
  check-user-info:
    exec: id
    exit-status: 0
    stdout:
    - uid={{ .Vars.containerSecurityContext.runAsUser }}
    - /groups=.*{{ .Vars.podSecurityContext.fsGroup }}/
