{{- $kube := eq .Values.executor "KubernetesExecutor" -}}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}-scheduler
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: scheduler
    {{- if .Values.commonLabels }}
      {{- include "common.tplvalues.render" (dict "value" .Values.commonLabels "context" $) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" (dict "value" .Values.commonAnnotations "context" $) | trim | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: scheduler
  replicas: {{ default 1 .Values.replicaCount }}
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: scheduler
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/config/configmap.yaml") . | sha256sum }}
      {{- if .Values.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
    spec:
      {{- include "airflow.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.securityContext.enabled }}
      securityContext: {{- omit .Values.securityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "airflow.serviceAccountName" . }}
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "component" "scheduler" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "component" "scheduler" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
      initContainers: {{- include "airflow.git.containers.clone" . | trim | nindent 8 }}
      containers: {{- include "airflow.git.containers.sync" . | trim | nindent 8 }}
        - name: airflow-scheduler
          image: {{ include "airflow.schedulerImage" . | quote }}
          imagePullPolicy: {{ .Values.schedulerImage.pullPolicy | quote }}
          {{- if .Values.airflow.scheduler.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.airflow.scheduler.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.airflow.scheduler.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.airflow.scheduler.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            {{- include "airflow.configure.airflow.common" . | nindent 12 }}
            {{- include "airflow.configure.database" . | nindent 12 }}
            {{- include "airflow.configure.redis" . | nindent 12 }}
            {{- include "airflow.configure.airflow.kubernetesExecutor" . | nindent 12 }}
            {{- if .Values.airflow.extraEnvVars }}
              {{- include "common.tplvalues.render" (dict "value" .Values.airflow.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
            {{- if .Values.airflow.scheduler.extraEnvVars }}
              {{- include "common.tplvalues.render" (dict "value" .Values.airflow.scheduler.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.airflow.extraEnvVarsCM }}
            - configMapRef:
                name: {{ .Values.airflow.extraEnvVarsCM }}
            {{- end }}
            {{- if .Values.airflow.extraEnvVarsSecret }}
            - secretRef:
                name: {{ .Values.airflow.extraEnvVarsSecret }}
            {{- end }}
            {{- if .Values.airflow.scheduler.extraEnvVarsCM }}
            - configMapRef:
                name: {{ .Values.airflow.scheduler.extraEnvVarsCM }}
            {{- end }}
            {{- if .Values.airflow.scheduler.extraEnvVarsSecret }}
            - secretRef:
                name: {{ .Values.airflow.scheduler.extraEnvVarsSecret }}
            {{- end }}
          ports:
            - name: task-logs
              containerPort: {{ .Values.airflow.worker.port }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
          {{- end }}
          volumeMounts:
          {{- if .Files.Glob "files/dags/*.py" }}
            - name: local-dag-files
              mountPath: /opt/bitnami/airflow/dags/local
          {{- end }}
          {{- if .Values.airflow.dagsConfigMap }}
            - name: external-dag-files
              mountPath: /opt/bitnami/airflow/dags/external
          {{- end }}
          {{- if include "airflow.shouldUseConfigFromConfigMap" . }}
            - name: custom-configuration-file
              mountPath: /opt/bitnami/airflow/airflow.cfg
              subPath: airflow.cfg
          {{- end }}
          {{- if $kube }}
            - name: custom-configuration-file
              mountPath: /opt/bitnami/airflow/pod_template.yaml
              subPath: pod_template.yaml
          {{- end }}
            {{- include "airflow.git.maincontainer.volumeMounts" . | trim | nindent 12 }}
          {{- if .Values.airflow.scheduler.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.airflow.scheduler.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.airflow.scheduler.resources }}
          resources: {{- toYaml .Values.airflow.scheduler.resources | nindent 12 }}
          {{- end }}
      volumes:
      {{- if .Files.Glob "files/dags/*.py" }}
        - name: local-dag-files
          configMap:
            name: {{ include "common.names.fullname" . }}-dag-files
      {{- end }}
      {{- if .Values.airflow.dagsConfigMap }}
        - name: external-dag-files
          configMap:
            name: {{ .Values.airflow.dagsConfigMap }}
      {{- end }}
      {{- if or (include "airflow.shouldUseConfigFromConfigMap" .) $kube }}
        - name: custom-configuration-file
          configMap:
            name: {{ include "airflow.configMapName"  . }}
      {{- end }}
        {{- include "airflow.git.volumes" . | trim | nindent 8 }}
      {{- if .Values.airflow.scheduler.extraVolumes }}
      {{- include "common.tplvalues.render" (dict "value" .Values.airflow.scheduler.extraVolumes "context" $) | nindent 8 }}
      {{- end }}
