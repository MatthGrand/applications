apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}-web
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: web
    {{- if .Values.commonLabels }}
      {{- include "common.tplvalues.render" (dict "value" .Values.commonLabels "context" $) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" (dict "value" .Values.commonAnnotations "context" $) | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: web
  replicas: {{ default 1 .Values.replicaCount }}
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: web
    {{- if .Values.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | trim | nindent 8 }}
    {{- end }}
    spec:
      {{- include "airflow.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.securityContext.enabled }}
      securityContext: {{- omit .Values.securityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "airflow.serviceAccountName" . }}
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "component" "web" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "component" "web" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
      initContainers: {{- include "airflow.git.containers.clone" . | trim | nindent 8 }}
      containers: {{- include "airflow.git.containers.sync" . | trim | nindent 8 }}
        - name: airflow-web
          image: {{ include "airflow.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if .Values.airflow.web.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.airflow.web.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.airflow.web.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.airflow.web.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            {{- include "airflow.configure.airflow.common"  . | nindent 12 }}
            {{- include "airflow.configure.database" . | nindent 12 }}
            {{- include "airflow.configure.redis" . | nindent 12 }}
            - name: AIRFLOW_USERNAME
              value: {{ .Values.airflow.auth.username }}
            - name: AIRFLOW_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "airflow.secretName" . }}
                  key: airflow-password
            {{- if .Values.airflow.baseUrl }}
            - name: AIRFLOW_BASE_URL
              value: {{ .Values.airflow.baseUrl }}
            {{- end }}
            - name: AIRFLOW_LDAP_ENABLE
              value: {{ ternary "yes" "no" .Values.ldap.enabled | quote }}
            {{- if .Values.ldap.enabled }}
            - name: AIRFLOW_LDAP_URI
              value: {{ .Values.ldap.uri }}
            - name: AIRFLOW_LDAP_SEARCH
              value: {{ .Values.ldap.base }}
            - name: AIRFLOW_LDAP_BIND_USER
              value: {{ .Values.ldap.binddn }}
            - name: AIRFLOW_LDAP_BIND_PASSWORD
              value: {{ .Values.ldap.bindpw }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "airflow.ldapSecretName" . }}
                  key: bind-password
            - name: AIRFLOW_LDAP_UID_FIELD
              value: {{ .Values.ldap.uidField }}
            - name: AIRFLOW_LDAP_USE_TLS
              value: {{ ternary "yes" "no" .Values.ldap.tls.enabled | quote }}
            {{- if .Values.ldap.tls.enabled }}
            - name: AIRFLOW_LDAP_ALLOW_SELF_SIGNED
              value: {{ .Values.ldap.tls.allowSelfSigned }}
            - name: AIRFLOW_LDAP_TLS_CA_CERTIFICATE
              value: {{ include "airflow.ldapCAFilename" . | quote }}
            {{- end }}
            {{- end }}
            {{- if .Values.airflow.extraEnvVars }}
              {{- toYaml .Values.airflow.extraEnvVars | nindent 12 }}
            {{- end }}
            {{- if .Values.airflow.web.extraEnvVars }}
              {{- include "common.tplvalues.render" (dict "value" .Values.airflow.web.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.airflow.extraEnvVarsCM }}
            - configMapRef:
                name: {{ .Values.airflow.extraEnvVarsCM }}
            {{- end }}
            {{- if .Values.airflow.extraEnvVarsSecret }}
            - secretRef:
                name: {{ .Values.airflow.extraEnvVarsSecret }}
            {{- end }}
            {{- if .Values.airflow.web.extraEnvVarsCM }}
            - configMapRef:
                name: {{ .Values.airflow.web.extraEnvVarsCM }}
            {{- end }}
            {{- if .Values.airflow.web.extraEnvVarsSecret }}
            - secretRef:
                name: {{ .Values.airflow.web.extraEnvVarsSecret }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
        {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
          {{- if .Values.airflow.baseUrl }}
            tcpSocket:
              port: http
          {{- else }}
            httpGet:
              path: /health
              port: http
          {{- end }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
          {{- if .Values.airflow.baseUrl }}
            tcpSocket:
              port: http
          {{- else }}
            httpGet:
              path: /health
              port: http
          {{- end }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        {{- end }}
          volumeMounts:
          {{- if .Files.Glob "files/dags/*.py" }}
            - name: local-dag-files
              mountPath: /opt/bitnami/airflow/dags/local
          {{- end }}
          {{- if .Values.airflow.dagsConfigMap }}
            - name: external-dag-files
              mountPath: /opt/bitnami/airflow/dags/external
          {{- end }}
          {{- if .Values.airflow.configurationConfigMap }}
            - name: custom-configuration-file
              mountPath: /opt/bitnami/airflow/airflow.cfg
              subPath: airflow.cfg
          {{- end }}
          {{- if .Values.airflow.webserverConfigMap }}
            - name: custom-webserver-configuration-file
              mountPath: /opt/bitnami/airflow/webserver_config.py
              subPath: webserver_config.py
          {{- end }}
          {{- if .Values.ldap.tls.enabled }}
            - name: airflow-ldap-ca-certificate
              mountPath: /opt/bitnami/airflow/conf/certs/
              readOnly: true
          {{- end }}
            {{- include "airflow.git.maincontainer.volumeMounts" . | trim | nindent 12 }}
          {{- if .Values.airflow.web.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.airflow.web.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.airflow.web.resources }}
          resources: {{- toYaml .Values.airflow.web.resources | nindent 12 }}
          {{- end }}
      volumes:
      {{- if .Files.Glob "files/dags/*.py" }}
        - name: local-dag-files
          configMap:
            name: {{ include "common.names.fullname" . }}-dag-files
      {{- end }}
      {{- if .Values.airflow.dagsConfigMap }}
        - name: external-dag-files
          configMap:
            name: {{ .Values.airflow.dagsConfigMap }}
      {{- end }}
      {{- if .Values.airflow.configurationConfigMap }}
        - name: custom-configuration-file
          configMap:
            name: {{ .Values.airflow.configurationConfigMap }}
      {{- end }}
      {{- if .Values.airflow.webserverConfigMap }}
        - name: custom-webserver-configuration-file
          configMap:
            name: {{ .Values.airflow.webserverConfigMap }}
      {{- end }}
      {{- if .Values.ldap.tls.enabled }}
        - name: airflow-ldap-ca-certificate
          secret:
            secretName: {{ required "A secret containing the LDAP CA certificate. It is required when SSL in enabled" .Values.ldap.tls.CAcertificateSecret }}
            defaultMode: 256
      {{- end }}
        {{- include "airflow.git.volumes" . | trim | nindent 8 }}
      {{- if .Values.airflow.web.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.airflow.web.extraVolumes "context" $) | nindent 8 }}
      {{- end }}
