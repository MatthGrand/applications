## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## e.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""

## @section Common parameters

## @param kubeVersion Force target Kubernetes version (using Helm capabilities if not set)
##
kubeVersion: ""
## @param nameOverride String to partially override airflow.fullname template with a string (will prepend the release name)
##
nameOverride: ""
## @param fullnameOverride String to fully override airflow.fullname template with a string
##
fullnameOverride: ""
## @param affinity Affinity for pod assignment (evaluated as a template)
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
##
affinity: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## Configure Container Security Context (only main container)
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
## @param containerSecurityContext.enabled Enable container security context
## @param containerSecurityContext.runAsUser User ID for the container
## @param containerSecurityContext.runAsNonRoot Set Controller container's Security Context runAsNonRoot
##
containerSecurityContext:
  enabled: true
  runAsUser: 1001
  runAsNonRoot: true
## @param extraDeploy A list of extra kubernetes resources to be deployed
##
extraDeploy: []
## @param extraEnvVars Extra environment variables to add to web, worker and scheduler pods
## The parameters from the configuration file can be overwritten by using environment variables with this format:
## AIRFLOW__{SECTION}__{KEY}. Note the double underscores. More info at https://airflow.readthedocs.io/en/stable/howto/set-config.html
##
## - name: AIRFLOW__SMTP__SMTP_HOST
##   value: "localhost"
## - name: AIRFLOW__SMTP__SMTP_PORT
##   value: "25"
## - name: AIRFLOW__SMTP__USER
##   value: ""
##
extraEnvVars: []
## @param extraEnvVarsCM ConfigMap containing extra env vars to add to web, worker and scheduler pods
##
extraEnvVarsCM: ""
## @param extraEnvVarsSecret Secret containing extra env vars to add to web, worker and scheduler pods
##
extraEnvVarsSecret: ""
## @param initContainers List of init containers to be added to the web, worker and scheduler pods
## Example:
## initContainers:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
initContainers: []
## Network policies
## Ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
## @param networkPolicies.enabled Switch to enable network policies
##
networkPolicies:
  enabled: false
## Node affinity preset
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
## @param nodeAffinityPreset.key Node label key to match. Ignored if `affinity` is set.
## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set.
##
nodeAffinityPreset:
  ## Example:
  ## key: "kubernetes.io/e2e-az-name"
  ##
  key: ""
  type: ""
  ## Example:
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []
## @param nodeSelector Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}
## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`.
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAffinityPreset: ""
## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`.
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAntiAffinityPreset: soft
## Configure Pods Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext.enabled Enable pod security context
## @param podSecurityContext.fsGroup fsGroup ID for the pod
##
podSecurityContext:
  enabled: true
  fsGroup: 1001
## Role Based Access
## Ref: https://kubernetes.io/docs/admin/authorization/rbac/
## @param rbac.create If true, create & use RBAC resources
##
rbac:
  create: false
## Pods Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
## @param serviceAccount.annotations Annotations for service account. Evaluated as a template. Only used if `create` is `true`.
## @param serviceAccount.create Specifies whether a ServiceAccount should be created
## @param serviceAccount.name Name of the service account to use. If not set and create is true, a name is generated using the fullname template.
## @param serviceAccount.automountServiceAccountToken Automount service account token for the server service account
##
serviceAccount:
  annotations: {}
  create: false
  name: ""
  automountServiceAccountToken: true
## @param sidecars List of sidecar containers to be added to web, worker and scheduler pods
## Example:
## sidecars:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
sidecars: []
## @param tolerations Tolerations for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## @section Airflow common parameters

## Authentication
## @param auth.existingSecret Name of an existing secret containing password and fernet key ('airflow-password and 'airflow-fernetKey' keys)
## @param auth.fernetKey Fernet key to secure connections
## @param auth.forcePassword Force users to specify a password
## @param auth.password Password to access web UI
## @param auth.username Username to access web UI
##
auth:
  existingSecret: ""
  ## More info about the fernet key at:
  ## - https://airflow.readthedocs.io/en/stable/howto/secure-connections.html
  ## - https://bcb.github.io/airflow/fernet-key
  ##
  fernetKey: ""
  ## This is required for 'helm upgrade' to work properly.
  ## If it is not forced, a random password will be generated.
  ##
  forcePassword: false
  password: ""
  username: user
## @param configurationConfigMap Name of an existing config map containing the Airflow config file
##
configurationConfigMap: ""
## @param executor Airflow executor, it should be one of 'SequentialExecutor', 'LocalExecutor', 'CeleryExecutor', 'KubernetesExecutor', 'CeleryKubernetesExecutor'
## ref: http://airflow.apache.org/docs/stable/executor/index.html
##
executor: 'CeleryExecutor'
## @param dagsConfigMap Name of an existing config map containing all the DAGs files you want to load in Airflow
##
dagsConfigMap: ""
## @param loadExamples Switch to load some Airflow examples
##
loadExamples: false

## @section Airflow web parameters

web:
  ## Bitnami Airflow image version
  ## ref: https://hub.docker.com/r/bitnami/airflow/tags/
  ## @param web.image.registry Airflow image registry
  ## @param web.image.repository Airflow image repository
  ## @param web.image.tag Airflow image tag (immutable tags are recommended)
  ## @param web.image.pullPolicy Airflow image pull policy
  ## @param web.image.pullSecrets Airflow image pull secrets
  ## @param web.image.debug Enable image debug mode
  image:
    registry: docker.io
    repository: bitnami/airflow
    tag: 2.1.3-debian-10-r10
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    ## Set to true if you would like to see extra information on logs
    ## It turns BASH and/or NAMI debugging in the image
    ##
    debug: false
  ## @param web.replicaCount Number of web replicas
  ##
  replicaCount: 1
  ## @param web.hostAliases Deployment pod host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param web.baseUrl URL used to access to airflow web ui
  ##
  baseUrl: ""
  ## @param web.configMap Name of an existing config map containing the Airflow webserver config file
  ##
  configMap: ""
  ## @param web.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param web.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param web.lifecycleHooks Add lifecycle hooks to the Airflow Web container(s)
  ##
  lifecycleHooks: {}
  ## @param web.podLabels Add extra labels to the web's pods
  ##
  podLabels: {}
  ## @param web.podAnnotations Add extra annotations to the web's pods
  ##
  podAnnotations: {}
  ## @param web.containerPorts.http Container port to be used for exposing http server
  ##
  containerPorts:
    http: 8080
  ## @param web.extraVolumeMounts Add extra volume mounts
  ##
  extraVolumeMounts: []
  ## @param web.extraVolumes Add extra volumes
  ##
  extraVolumes: []
  ## @param web.extraEnvVars Array containing extra environment variables
  ##
  extraEnvVars: []
  ## @param web.extraEnvVarsCM ConfigMap containing extra environment variables
  ##
  extraEnvVarsCM: ""
  ## @param web.extraEnvVarsSecret Secret containing extra environment variables (in case of sensitive data)
  ##
  extraEnvVarsSecret: ""
  ## Web container' resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param web.resources.limits The resources limits for the Web container
  ## @param web.resources.requests The requested resources for the Web container
  ##
  resources:
    ## Example:
    ## limits:
    ##    cpu: 200m
    ##    memory: 1Gi
    limits: {}
    ## Examples:
    ## requests:
    ##    memory: 256Mi
    ##    cpu: 250m
    requests: {}
  ## Configure extra options for Web containers' liveness, readiness and startup probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
  ## @param web.startupProbe.enabled Enable startupProbe
  ## @param web.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param web.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param web.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param web.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param web.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 180
    periodSeconds: 20
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param web.livenessProbe.enabled Enable livenessProbe
  ## @param web.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param web.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param web.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param web.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param web.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 180
    periodSeconds: 20
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param web.readinessProbe.enabled Enable readinessProbe
  ## @param web.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param web.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param web.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param web.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param web.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param web.customStartupProbe Custom liveness probe for the Web component
  ##
  customStartupProbe: {}
  ## @param web.customLivenessProbe Custom liveness probe for the Web component
  ##
  customLivenessProbe: {}
  ## @param web.customReadinessProbe Custom rediness probe for the Web component
  ##
  customReadinessProbe: {}
  ## Enable PodDisruptionBudget for web pods
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ## @param web.pdb.create Enable/disable a Pod Disruption Budget for web pods
  ## @param web.pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
  ## @param web.pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable
  ##
  pdb:
    create: false
    minAvailable: 1
    maxUnavailable: ""
  ## @param web.sidecars Add sidecars to the Web pods
  ## Example:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param web.updateStrategy.type Airflow Web deployment strategy type.
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  ## e.g:
  ## updateStrategy:
  ##  type: RollingUpdate
  ##  rollingUpdate:
  ##    maxSurge: 25%
  ##    maxUnavailable: 25%
  ##
  updateStrategy:
    type: RollingUpdate
  ## @param web.initContainers Add initContainers to the Web pods
  ## Example:
  ## initContainers:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  initContainers: []
  ## @param web.priorityClassName Priority Class Name
  ## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
  ##
  priorityClassName: ""
  ## @param web.nodeSelector Node labels for pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param web.schedulerName Name of the k8s scheduler (other than default)
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param web.topologySpreadConstraints Topology Spread Constraints for pod assignment
  ## https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
  ## The value is evaluated as a template
  ##
  topologySpreadConstraints: []

## Airflow service parameters.
## For minikube, set this to NodePort, elsewhere use LoadBalancer
##
service:
  ## @param service.type Airflow service type
  ##
  type: ClusterIP
  ## @param service.ports.http Airflow service HTTP port
  ##
  ports:
    http: 8080
  ## @param service.nodePorts.http Airflow service NodePort
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  ##
  nodePorts:
    http: ""
  ## @param service.clusterIP Airflow service Cluster IP
  ## e.g.:
  ## clusterIP: None
  ##
  clusterIP: ""
  ## @param service.loadBalancerIP Airflow service Load Balancer IP
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
  ##
  loadBalancerIP: ""
  ## @param service.loadBalancerSourceRanges Airflow service Load Balancer sources
  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ## e.g:
  ## loadBalancerSourceRanges:
  ##   - 10.10.10.0/24
  ##
  loadBalancerSourceRanges: []
  ## @param service.externalTrafficPolicy Airflow service external traffic policy
  ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster
  ## @param service.extraPorts Extra ports to expose (normally used with the `sidecar` value)
  ##
  extraPorts: []
  ## @param service.annotations Additional custom annotations for Airflow service
  ##
  annotations: {}
## @section Airflow scheduler parameters

scheduler:
  ## Bitnami Airflow Scheduler image version
  ## ref: https://hub.docker.com/r/bitnami/airflow-scheduler/tags/
  ## @param scheduler.image.registry Airflow Scheduler image registry
  ## @param scheduler.image.repository Airflow Scheduler image repository
  ## @param scheduler.image.tag Airflow Scheduler image tag (immutable tags are recommended)
  ## @param scheduler.image.pullPolicy Airflow Scheduler image pull policy
  ## @param scheduler.image.pullSecrets Airflow Scheduler image pull secrets
  ## @param scheduler.image.debug Enable image debug mode
  ##
  image:
    registry: docker.io
    repository: bitnami/airflow-scheduler
    tag: 2.1.3-debian-10-r18
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    ## Set to true if you would like to see extra information on logs
    ## It turns BASH and/or NAMI debugging in the image
    ##
    debug: false
  ## @param scheduler.replicaCount Number of scheduler replicas
  ##
  replicaCount: 1
  ## @param scheduler.command Override cmd
  ##
  command: []
  ## @param scheduler.args Override args
  ##
  args: []
  ## @param scheduler.lifecycleHooks Add lifecycle hooks to the Airflow Scheduler container(s)
  ##
  lifecycleHooks: {}
  ## @param scheduler.hostAliases Deployment pod host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param scheduler.podLabels Add extra labels to the web's pods
  ##
  podLabels: {}
  ## @param scheduler.podAnnotations Add extra annotations to the web's pods
  ##
  podAnnotations: {}
  ## @param scheduler.extraVolumeMounts Add extra volume mounts
  ##
  extraVolumeMounts: []
  ## @param scheduler.extraVolumes Add extra volumes
  ##
  extraVolumes: []
  ## @param scheduler.extraEnvVars Add extra environment variables
  ##
  extraEnvVars: []
  ## @param scheduler.extraEnvVarsCM ConfigMap with extra environment variables
  ##
  extraEnvVarsCM: ""
  ## @param scheduler.extraEnvVarsSecret Secret with extra environment variables
  ##
  extraEnvVarsSecret: ""
  ## @param scheduler.containerPorts.taskLogs Port where the scheduler will be exposed
  ##
  containerPorts:
    taskLogs: 8793
  ## @param scheduler.updateStrategy.type Airflow Scheduler deployment strategy type.
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  ## e.g:
  ## updateStrategy:
  ##  type: RollingUpdate
  ##  rollingUpdate:
  ##    maxSurge: 25%
  ##    maxUnavailable: 25%
  ##
  updateStrategy:
    type: RollingUpdate
  ## Scheduler containers' resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube.
  ## @param scheduler.resources.limits The resources limits for the Scheduler container
  ## @param scheduler.resources.requests The requested resources for the Scheduler container
  ##
  resources:
    ## Example:
    ## limits:
    ##    cpu: 200m
    ##    memory: 1Gi
    limits: {}
    ## Example:
    ## requests:
    ##    memory: 256Mi
    ##    cpu: 250m
    requests: {}
  ## @param scheduler.customStartupProbe Custom Startup probe
  ##
  customStartupProbe: {}
  ## @param scheduler.customLivenessProbe Custom Liveness probe
  ##
  customLivenessProbe: {}
  ## @param scheduler.customReadinessProbe Custom Liveness probe
  ##
  customReadinessProbe: {}
  ## Enable PodDisruptionBudget for scheduler pods
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ## @param scheduler.pdb.create Enable/disable a Pod Disruption Budget for scheduler pods
  ## @param scheduler.pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
  ## @param scheduler.pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable
  ##
  pdb:
    create: false
    minAvailable: 1
    maxUnavailable: ""
  ## @param scheduler.sidecars Add sidecars to the scheduler pods.
  ## Example:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param scheduler.initContainers Add initContainers to the scheduler pods.
  ## Example:
  ## initContainers:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  initContainers: []
  ## @param scheduler.priorityClassName Priority Class Name
  ## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
  ##
  priorityClassName: ""
  ## @param scheduler.nodeSelector Node labels for pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param scheduler.schedulerName Name of the k8s scheduler (other than default)
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param scheduler.topologySpreadConstraints Topology Spread Constraints for pod assignment
  ## https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
  ## The value is evaluated as a template
  ##
  topologySpreadConstraints: []

## @section Airflow worker parameters

worker:
  ## Bitnami Airflow Worker image version
  ## ref: https://hub.docker.com/r/bitnami/airflow-worker/tags/
  ## @param worker.image.registry Airflow Worker image registry
  ## @param worker.image.repository Airflow Worker image repository
  ## @param worker.image.tag Airflow Worker image tag (immutable tags are recommended)
  ## @param worker.image.pullPolicy Airflow Worker image pull policy
  ## @param worker.image.pullSecrets Airflow Worker image pull secrets
  ## @param worker.image.debug Enable image debug mode
  ##
  image:
    registry: docker.io
    repository: bitnami/airflow-worker
    tag: 2.1.3-debian-10-r19
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    ## Set to true if you would like to see extra information on logs
    ## It turns BASH and/or NAMI debugging in the image
    ##
    debug: false
  ## @param worker.containerPorts.worker Port where the worker will be exposed
  ##
  containerPorts:
    worker: 8793
  ## @param worker.replicaCount Number of worker replicas
  ##
  replicaCount: 1
  ## @param worker.hostAliases Deployment pod host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param worker.podTemplate Template to replace the default one to be use when `executor=KubernetesExecutor` to create worker pods
  ##
  podTemplate: {}
  ## @param worker.podManagementPolicy podManagementPolicy to manage scaling operation of worker pods
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#pod-management-policies
  ##
  podManagementPolicy: ""
  ## @param worker.command Override cmd
  ##
  command: []
  ## @param worker.args Override args
  ##
  args: []
  ## @param worker.lifecycleHooks Add lifecycle hooks to the Airflow Worker container(s)
  ##
  lifecycleHooks: {}
  ## @param worker.podAnnotations Add annotations to the worker pods
  ##
  podAnnotations: {}
  ## @param worker.podLabels Add extra labels to the web's pods
  ##
  podLabels: {}
  ## @param worker.extraVolumeMounts Add extra volume mounts
  ##
  extraVolumeMounts: []
  ## @param worker.extraVolumes Add extra volumes
  ##
  extraVolumes: []
  ## @param worker.extraEnvVars Add extra environment variables
  ##
  extraEnvVars: []
  ## @param worker.extraEnvVarsCM ConfigMap with extra environment variables
  ##
  extraEnvVarsCM: ""
  ## @param worker.extraEnvVarsSecret Secret with extra environment variables
  ##
  extraEnvVarsSecret: ""
  ## Worker containers' resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param worker.resources.limits The resources limits for the Worker container
  ## @param worker.resources.requests The requested resources for the Worker container
  ##
  resources:
    ## Example:
    ## limits:
    ##    cpu: 200m
    ##    memory: 1Gi
    limits: {}
    ## Example:
    ## requests:
    ##    memory: 256Mi
    ##    cpu: 250m
    requests: {}
  ## Configure extra options for liveness, readiness and startup probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
  ## @param worker.startupProbe.enabled Enable startupProbe
  ## @param worker.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param worker.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param worker.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param worker.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param worker.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param worker.livenessProbe.enabled Enable livenessProbe
  ## @param worker.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param worker.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param worker.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param worker.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param worker.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 180
    periodSeconds: 20
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param worker.readinessProbe.enabled Enable readinessProbe
  ## @param worker.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param worker.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param worker.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param worker.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param worker.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param worker.customStartupProbe Custom Liveness probe
  ##
  customStartupProbe: {}
  ## @param worker.customLivenessProbe Custom Liveness probe
  ##
  customLivenessProbe: {}
  ## @param worker.customReadinessProbe Custom Liveness probe
  ##
  customReadinessProbe: {}
  ## Enable PodDisruptionBudget for worker pods
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ## @param worker.pdb.create Enable/disable a Pod Disruption Budget for worker pods
  ## @param worker.pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
  ## @param worker.pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable
  ##
  pdb:
    create: false
    minAvailable: 1
    maxUnavailable: ""
  ## Enable HorizontalPodAutoscaler for worker pods
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ## @param worker.autoscaling.enabled Whether enable horizontal pod autoscale
  ## @param worker.autoscaling.minReplicas Configure a minimum amount of pods
  ## @param worker.autoscaling.maxReplicas Configure a maximum amount of pods
  ## @param worker.autoscaling.targetCPU Define the CPU target to trigger the scaling actions (utilization percentage)
  ## @param worker.autoscaling.targetMemory Define the memory target to trigger the scaling actions (utilization percentage)
  ##
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPU: 80
    targetMemory: 80
  ## @param worker.updateStrategy.type StatefulSet controller supports automated updates. There are two valid update strategies: RollingUpdate and OnDelete
  ## ref: https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#updating-statefulsets
  ##
  updateStrategy:
    type: RollingUpdate
  ## @param worker.sidecars Add sidecars to the worker pods.
  ## Example:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param worker.initContainers Add initContainers to the worker pods.
  ## Example:
  ## initContainers:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  initContainers: []
  ## @param worker.priorityClassName Priority Class Name
  ## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
  ##
  priorityClassName: ""
  ## @param worker.nodeSelector Node labels for pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param worker.affinity Affinity for worker pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## Note: this configuration supersedes the global affinity configuration
  ##
  affinity: {}
  ## @param worker.tolerations Tolerations for worker pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ## Note: this configuration supersedes the global tolerations configuration
  ##
  tolerations: []
  ## @param worker.schedulerName Name of the k8s scheduler (other than default)
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param worker.topologySpreadConstraints Topology Spread Constraints for pod assignment
  ## https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
  ## The value is evaluated as a template
  ##
  topologySpreadConstraints: []

## @section Airflow git sync parameters

## Configure Git to pull dags and plugins
##
git:
  ## Bitnami Git image version
  ## ref: https://hub.docker.com/r/bitnami/git/tags/
  ## @param git.image.registry Git image registry
  ## @param git.image.repository Git image repository
  ## @param git.image.tag Git image tag (immutable tags are recommended)
  ## @param git.image.pullPolicy Git image pull policy
  ## @param git.image.pullSecrets Git image pull secrets
  ## @param git.image.debug Enable image debug mode
  ##
  image:
    registry: docker.io
    repository: bitnami/git
    tag: 2.33.0-debian-10-r28
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    ## Set to true if you would like to see extra information on logs
    ## It turns BASH and/or NAMI debugging in the image
    ##
    debug: false
  ## Get DAG files from git repositories
  ## @param git.dags.enabled Enable in order to download DAG files from git repositories.
  ## @param git.dags.repositories Array of repositories from which to download DAG files
  ##
  dags:
    enabled: false
    ## Name for repositories can be anything unique and must follow same naming conventions as kubernetes.
    ## Kubernetes resources can have names up to 253 characters long. The characters allowed in names are:
    ## digits (0-9), lower case letters (a-z), -, and .
    ## Example:
    ##   - repository: https://github.com/myuser/myrepo
    ##     branch: main
    ##     name: my-dags
    ##     path: /
    ##
    repositories:
      - repository: ""
        ## Branch from repository to checkout
        ##
        branch: ""
        ## An unique identifier for repository, must be unique for each repository
        ##
        name: ""
        ## Path to a folder in the repository containing the dags
        ##
        path: ""
  ## Get Plugins files from git repositories.
  ## @param git.plugins.enabled Enable in order to download Plugins files from git repositories.
  ## @param git.plugins.repositories Array of repositories from which to download DAG files
  ##
  plugins:
    enabled: false
    repositories:
      - repository: ""
        ## Branch from repository to checkout
        ##
        branch: ""
        ## An unique identifier for repository, must be unique for each repository
        ##
        name: ""
        ## Path to a folder in the repository containing the dags
        ##
        path: ""
  ## Properties for the Clone init container
  ## @param git.clone.command Override cmd
  ## @param git.clone.args Override args
  ## @param git.clone.extraVolumeMounts Add extra volume mounts
  ## @param git.clone.extraEnvVars Add extra environment variables
  ## @param git.clone.extraEnvVarsCM ConfigMap with extra environment variables
  ## @param git.clone.extraEnvVarsSecret Secret with extra environment variables
  ## @param git.clone.resources Clone init container resource requests and limits
  ##
  clone:
    command: []
    args: []
    extraVolumeMounts: []
    extraEnvVars: []
    extraEnvVarsCM: ""
    extraEnvVarsSecret: ""
    ## Clone init container resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources: {}
  ## Properties for the Sync sidecar container
  ## @param git.sync.interval Interval in seconds to pull the git repository containing the plugins and/or DAG files
  ## @param git.sync.command Override cmd
  ## @param git.sync.args Override args
  ## @param git.sync.extraVolumeMounts Add extra volume mounts
  ## @param git.sync.extraEnvVars Add extra environment variables
  ## @param git.sync.extraEnvVarsCM ConfigMap with extra environment variables
  ## @param git.sync.extraEnvVarsSecret Secret with extra environment variables
  ## @param git.sync.resources Sync sidecar container resource requests and limits
  ##
  sync:
    interval: 60
    command: []
    args: []
    extraVolumeMounts: []
    extraEnvVars: []
    extraEnvVarsCM: ""
    extraEnvVarsSecret: ""
    ## Sync sidecar container resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources: {}

## @section Airflow ldap parameters

## LDAP configuration
## @param ldap.enabled Enable LDAP authentication
## @param ldap.uri Server URI, eg. ldap://ldap_server:389
## @param ldap.base Base of the search, eg. ou=example,o=org
## @param ldap.binddn Bind DN
## @param ldap.bindpw Bind Password
## @param ldap.uidField Field used for uid
##
ldap:
  enabled: false
  uri: 'ldap://ldap_server:389'
  base: 'ou=example,o=org'
  binddn: 'cn=user,ou=example,o=org'
  bindpw: ""
  uidField: 'uid'
  ## SSL/TLS parameters for LDAP
  ## @param ldap.tls.enabled Enabled TLS/SSL for LDAP, you must include the CA file.
  ## @param ldap.tls.allowSelfSigned Allow to use self signed certificates
  ## @param ldap.tls.CAcertificateSecret Name of the existing secret containing the certificate CA file that will be used by ldap client.
  ## @param ldap.tls.CAcertificateFilename LDAP CA cert filename
  ##
  tls:
    enabled: false
    allowSelfSigned: true
    ## Cloud be create with: kubectl create secret generic airflow-secret --from-file=./ca.pem
    ##
    CAcertificateSecret: ""
    ## Example:
    ## CAcertificateFilename: 'ca.pem'
    ##
    CAcertificateFilename: ""

## @section Airflow exposing parameters

## Configure the ingress resource that allows you to access the Airflow installation.
## ref: http://kubernetes.io/docs/user-guide/ingress/
##
ingress:
  ## @param ingress.enabled Set to true to enable ingress record generation
  ##
  enabled: false
  ## @param ingress.pathType Ingress Path type
  ##
  pathType: ImplementationSpecific
  ## @param ingress.apiVersion Override API Version (automatically detected if not set)
  ##
  apiVersion: ""
  ## @param ingress.hostname Default host for the ingress record
  ##
  hostname: airflow.local
  ## @param ingress.path Default path for the ingress record
  ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
  ##
  path: /
  ## @param ingress.annotations Ingress annotations done as key:value pairs
  ##
  annotations: {}
  ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
  ## You can:
  ##   - Use the `ingress.secrets` parameter to create this TLS secret
  ##   - Relay on cert-manager to create it by setting `ingress.certManager=true`
  ##   - Relay on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
  ##
  tls: false
  ## @param ingress.certManager Add the corresponding annotations for cert-manager integration
  ##
  certManager: false
  ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
  ##
  selfSigned: false
  ## @param ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
  ## e.g:
  ## extraHosts:
  ##   - name: %%COMPONENT_NAME%%.local
  ##     path: /
  ##
  extraHosts: []
  ## @param ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
  ## e.g:
  ## extraPaths:
  ## - path: /*
  ##   backend:
  ##     serviceName: ssl-redirect
  ##     servicePort: use-annotation
  ##
  extraPaths: []
  ## @param ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## e.g:
  ## extraTls:
  ## - hosts:
  ##     - %%COMPONENT_NAME%%.local
  ##   secretName: %%COMPONENT_NAME%%.local-tls
  ##
  extraTls: []
  ## @param ingress.secrets Custom TLS certificates as secrets
  ## NOTE: 'key' and 'certificate' are expected in PEM format
  ## NOTE: 'name' should line up with a 'secretName' set further up
  ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
  ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  ## e.g:
  ## secrets:
  ##   - name: %%COMPONENT_NAME%%.local-tls
  ##     key: |-
  ##       -----BEGIN RSA PRIVATE KEY-----
  ##       ...
  ##       -----END RSA PRIVATE KEY-----
  ##     certificate: |-
  ##       -----BEGIN CERTIFICATE-----
  ##       ...
  ##       -----END CERTIFICATE-----
  ##
  secrets: []
  ## @param ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
  ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
  ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
  ##
  ingressClassName: ""
## @section Airflow database parameters

## PostgreSQL chart configuration
## ref: https://github.com/bitnami/charts/blob/master/bitnami/postgresql/values.yaml
## @param postgresql.enabled Switch to enable or disable the PostgreSQL helm chart
## @param postgresql.postgresqlUsername Airflow Postgresql username
## @param postgresql.postgresqlPassword Airflow Postgresql password
## @param postgresql.postgresqlDatabase Airflow Postgresql database
## @param postgresql.existingSecret Name of an existing secret containing the PostgreSQL password ('postgresql-password' key)
##
postgresql:
  enabled: true
  postgresqlUsername: bn_airflow
  postgresqlPassword: ""
  postgresqlDatabase: bitnami_airflow
  ## This secret is used in case of postgresql.enabled=true and we would like to specify password for newly created postgresql instance
  ##
  existingSecret: ""

## External PostgreSQL configuration
## All of these values are only used when postgresql.enabled is set to false
## @param externalDatabase.host Database host
## @param externalDatabase.user non-root Username for Airflow Database
## @param externalDatabase.password Database password
## @param externalDatabase.existingSecret Name of an existing secret resource containing the DB password
## @param externalDatabase.existingSecretPasswordKey Name of an existing secret key containing the DB password
## @param externalDatabase.database Database name
## @param externalDatabase.port Database port number
##
externalDatabase:
  host: localhost
  user: bn_airflow
  password: ""
  existingSecret: ""
  existingSecretPasswordKey: ""
  database: bitnami_airflow
  port: 5432

## Redis&trade; chart configuration
## ref: https://github.com/bitnami/charts/blob/master/bitnami/redis/values.yaml
## @param redis.enabled Switch to enable or disable the Redis&trade; helm
## @param redis.auth.enabled Switch to enable or disable authentication
## @param redis.auth.password Redis&trade; password
## @param redis.auth.existingSecret Name of existing secret object containing the password
## @param redis.architecture Cluster settings
##
redis:
  enabled: true
  auth:
    enabled: true
    ## Redis&trade; password (both master and slave). Defaults to a random 10-character alphanumeric string if not set and auth.enabled is true.
    ## It should always be set using the password value or in the existingSecret to avoid issues
    ## with Airflow.
    ## The password value is ignored if existingSecret is set
    password: ""
    existingSecret: ""
  architecture: standalone

## External Redis&trade; configuration
## All of these values are only used when redis.enabled is set to false
## @param externalRedis.host Redis&trade; host
## @param externalRedis.port Redis&trade; port number
## @param externalRedis.password Redis&trade; password
## @param externalRedis.existingSecret Name of an existing secret resource containing the Redis&trade; password in a 'redis-password' key
## @param externalRedis.username Redis&trade; username
##
externalRedis:
  host: localhost
  port: 6379
  password: ""
  existingSecret: ""
  ## Most Redis&trade; implementnations do not require a username to authenticate
  ## and it should be enough with the password
  ##
  username: ""

## @section Airflow metrics parameters

metrics:
  ## @param metrics.enabled Start a side-car prometheus exporter
  enabled: false
  ## Bitnami Airflow Exporter image
  ## ref: https://hub.docker.com/r/bitnami/airflow-exporter/tags/
  ## @param metrics.image.registry Airflow Exporter image registry
  ## @param metrics.image.repository Airflow Exporter image repository
  ## @param metrics.image.tag Airflow Exporter image tag (immutable tags are recommended)
  ## @param metrics.image.pullPolicy Airflow Exporter image pull policy
  ## @param metrics.image.pullSecrets Airflow Exporter image pull secrets
  ## @param metrics.image.debug Enable image debug mode
  ##
  image:
    registry: docker.io
    repository: bitnami/airflow-exporter
    tag: 0.20210126.0-debian-10-r213
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    ## Set to true if you would like to see extra information on logs
    ## It turns BASH and/or NAMI debugging in the image
    ##
    debug: false
  ## @param metrics.hostAliases Deployment pod host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## Prometheus Operator ServiceMonitor resource
  ##
  serviceMonitor:
    ## @param metrics.serviceMonitor.enabled Create ServiceMonitor Resource for scraping metrics using PrometheusOperator
    ##
    enabled: false
    ## @param metrics.serviceMonitor.namespace Namespace which Prometheus is running in
    ## e.g:
    ## namespace: monitoring
    ##
    namespace: ""
    ## @param metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in prometheus.
    ##
    jobLabel: ""
    ## @param metrics.serviceMonitor.interval Interval at which metrics should be scraped
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ##
    interval: 60s
    ## @param metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ##
    scrapeTimeout: 10s
    ## @param metrics.serviceMonitor.relabelings RelabelConfigs to apply to samples before scraping
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
    ##
    relabelings: []
    ## @param metrics.serviceMonitor.metricRelabelings MetricRelabelConfigs to apply to samples before ingestion
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
    ##
    metricRelabelings: []
    ## @param metrics.serviceMonitor.selector ServiceMonitor selector labels
    ## ref: https://github.com/bitnami/charts/tree/master/bitnami/prometheus-operator#prometheus-configuration
    ##
    ## selector:
    ##   prometheus: my-prometheus
    ##
    selector: {}
    ## @param metrics.serviceMonitor.honorLabels honorLabels chooses the metric's labels on collisions with target labels
    ##
    honorLabels: false

  ## @param metrics.extraEnvVars Array containing extra environment variables
  ##
  extraEnvVars: []
  ## @param metrics.extraEnvVarsCM ConfigMap containing extra environment variables
  ##
  extraEnvVarsCM: ""
  ## @param metrics.extraEnvVarsSecret Secret containing extra environment variables (in case of sensitive data)
  ##
  extraEnvVarsSecret: ""
  ## @param metrics.resources Metrics exporter resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
  ## @param metrics.tolerations Metrics exporter labels and tolerations for pod assignment
  ##
  tolerations: []
  ## @param metrics.podLabels Metrics exporter pod Annotation and Labels
  ##
  podLabels: {}
  ## Annotations to add to the metrics' pods
  ## @skip metrics.podAnnotations.prometheus.io/scrape
  ## @skip metrics.podAnnotations.prometheus.io/port
  podAnnotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '9112'
  ## @param metrics.nodeSelector Node labels for pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
