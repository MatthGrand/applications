{{- if and .Values.applicationSet.enabled .Values.applicationSet.webhook.ingress.enabled -}}
apiVersion: {{ include "common.capabilities.webhook.ingress.apiVersion" . }}
kind: Ingress
metadata:
  name: {{ include "argocd.applicationSet" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: applicationSet
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if or .Values.applicationSet.webhook.ingress.annotations .Values.commonAnnotations .Values.applicationSet.webhook.ingress.certManager }}
  annotations:
    {{- if .Values.applicationSet.webhook.ingress.certManager }}
    kubernetes.io/tls-acme: "true"
    {{- end }}
    {{- if .Values.applicationSet.webhook.ingress.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.applicationSet.webhook.ingress.annotations "context" $) | nindent 4 }}
    {{- end }}
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
  {{- end }}
spec:
  {{- if and .Values.applicationSet.webhook.ingress.ingressClassName (eq "true" (include "common.webhook.ingress.supportsIngressClassname" .)) }}
  ingressClassName: {{ .Values.applicationSet.webhook.ingress.ingressClassName | quote }}
  {{- end }}
  rules:
  {{- if .Values.applicationSet.webhook.ingress.hosts }}
    {{- range $host := .Values.applicationSet.webhook.ingress.hosts }}
    - host: {{ $host }}
      http:
        paths:
          {{- if .Values.applicationSet.webhook.ingress.extraPaths }}
          {{- toYaml .Values.applicationSet.webhook.ingress.extraPaths | nindent 10 }}
          {{- end }}
          {{- range $p := .Values.applicationSet.webhook.ingress.paths }}
          - path: {{ $p }}
            pathType: {{ .Values.applicationSet.webhook.ingress.pathType }}
            backend: {{- include "common.webhook.ingress.backend" (dict "serviceName" (include "argocd.applicationSet" .) "servicePort" (ternary "https" "http" .Values.applicationSet.webhook.ingress.tls) "context" $)  | nindent 14 }}
          {{- end -}}
    {{- end -}}
  {{- else }}
    - http:
        paths:
          {{- if .Values.applicationSet.webhook.ingress.extraPaths }}
          {{- toYaml .Values.applicationSet.webhook.ingress.extraPaths | nindent 10 }}
          {{- end }}
          {{- range $p := .Values.applicationSet.webhook.ingress.paths }}
          - path: {{ $p }}
            pathType: {{ .Values.applicationSet.webhook.ingress.pathType }}
            backend: {{- include "common.webhook.ingress.backend" (dict "serviceName" (include "argocd.applicationSet" .) "servicePort" (ternary "https" "http" .Values.applicationSet.webhook.ingress.tls) "context" $)  | nindent 14 }}
          {{- end -}}
  {{- end -}}
  tls:
    {{- if .Values.applicationSet.webhook.ingress.tls }}
    - hosts:
        - {{ .Values.applicationSet.webhook.ingress.hostname }}
      secretName: {{ printf "%s-tls" .Values.applicationSet.webhook.ingress.hostname }}
    {{- end }}
    {{- if .Values.applicationSet.webhook.ingress.extraTls }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.applicationSet.webhook.ingress.extraTls "context" $ ) | nindent 4 }}
    {{- end }}
{{- end -}}
