apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "argo-cd.repoServer.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "argo-cd.labels" . | nindent 4 }}
    app.kubernetes.io/component: repo-server
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  {{- if .Values.repoServer.updateStrategy }}
  strategy: {{- toYaml .Values.repoServer.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: repo-server
  revisionHistoryLimit: 5
  template:
    metadata:
      {{- if .Values.repoServer.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.repoServer.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "argo-cd.labels" . | nindent 8 }}
        app.kubernetes.io/component: repo-server
        {{- if .Values.repoServer.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.repoServer.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "argo-cd.repoServer.serviceAccountName" . }}
      {{- include "argo-cd.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.repoServer.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.repoServer.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.repoServer.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.repoServer.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.repoServer.podAffinityPreset "component" "repo-server" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.repoServer.podAntiAffinityPreset "component" "repo-server" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.repoServer.nodeAffinityPreset.type "key" .Values.repoServer.nodeAffinityPreset.key "values" .Values.repoServer.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.repoServer.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.repoServer.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.repoServer.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.repoServer.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.repoServer.priorityClassName }}
      priorityClassName: {{ .Values.repoServer.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.repoServer.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.repoServer.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      initContainers:
        {{- if .Values.repoServer.initContainers }}
        {{- include "common.tplvalues.render" (dict "value" .Values.repoServer.initContainers "context" $) | nindent 8 }}
        {{- end }}
      containers:
        - name: repo-server
          image: {{ template "argo-cd.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.repoServer.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.repoServer.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.repoServer.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.repoServer.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.repoServer.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.repoServer.args "context" $) | nindent 12 }}
          {{- end }}

          {{- if .Values.repoServer.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.repoServer.command "context" $) | nindent 12 }}
          {{- else }}
          command:
            - /opt/bitnami/scripts/argo-cd/entrypoint.sh
            - argocd-repo-server
            {{- if .Values.redis.enabled }}
            - --redis
            - {{ template "argo-cd.redis.fullname" . }}:6379
            {{- end }}
            - --logformat
            - {{ .Values.repoServer.logFormat }}
            - --loglevel
            - {{ .Values.repoServer.logLevel }}
            {{- end }}
          env:
            - name: BITNAMI_DEBUG
              value: {{ ternary "true" "false" .Values.image.debug | quote }}
            {{- if .Values.repoServer.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.repoServer.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.repoServer.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.repoServer.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.repoServer.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.repoServer.extraEnvVarsSecret "context" $) }}
            {{- end }}
          ports:
            - name: repo-server
              containerPort: {{ .Values.repoServer.containerPort }}
              protocol: TCP
            {{ if .Values.repoServer.metrics.enabled }}
            - name: metrics
              containerPort: 8084
              protocol: TCP
            {{- end }}
          {{- if .Values.repoServer.resources }}
          resources: {{- toYaml .Values.repoServer.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.repoServer.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.repoServer.livenessProbe "enabled") "context" $) | nindent 12 }}
          {{- else if .Values.repoServer.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.repoServer.customLivenessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.repoServer.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.repoServer.readinessProbe "enabled") "context" $) | nindent 12 }}
          {{- else if .Values.repoServer.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.repoServer.customReadinessProbe "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: gpg-keys
              mountPath: /app/config/gpg/source
            - name: gpg-keyring
              mountPath: /app/config/gpg/keys
            - name: argocd-repo-server-tls
              mountPath: /app/config/reposerver/tls
            - name: tmp-dir
              mountPath: /tmp
            {{- if .Values.configuration.knownHostsCM.enabled }}
            - name: ssh-known-hosts
              mountPath: /app/config/ssh
            {{- end }}
            {{- if .Values.configuration.tlsCerts }}
            - name: tls-certs
              mountPath: /app/config/tls
            {{- end }}
            {{- if .Values.repoServer.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.repoServer.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
      volumes:
        - name: gpg-keys
          configMap:
            name: argocd-gpg-keys-cm
        - name: gpg-keyring
          emptyDir: {}
        - name: argocd-repo-server-tls
          secret:
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
        - name: tmp-dir
          emptyDir: {}
        {{- if .Values.configuration.knownHostsCM.enabled }}
        - name: ssh-known-hosts
          configMap:
            name: argocd-ssh-known-hosts-cm
        {{- end }}
        {{- if .Values.configuration.tlsCerts }}
        - name: tls-certs
          configMap:
            name: argocd-tls-certs-cm
        {{- end }}
        {{- if .Values.repoServer.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.repoServer.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
