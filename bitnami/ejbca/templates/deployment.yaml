apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "ejbca.fullname" . }}
  labels: {{- include "ejbca.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels: {{- include "ejbca.matchLabels" . | nindent 6 }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels: {{- include "ejbca.labels" . | nindent 8 }}
      {{- if .Values.podAnnotations }}
      annotations:
        {{- include "ejbca.tplValue" (dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
    spec:
{{- include "ejbca.imagePullSecrets" . | indent 6 }}
      {{- if .Values.securityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
      {{- end }}
      {{- if .Values.initContainers }}
      initContainers: {{- include "ejbca.tplValue" (dict "value" .Values.initContainers "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: ejbca
          image: {{ template "ejbca.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          env:
            - name: EJBCA_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "ejbca.fullname" . }}
                  key: ejbca-admin-password
            - name: EJBCA_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "ejbca.databaseSecretName" . }}
                  key: mariadb-password
            {{- if .Values.ejbcaKeystoreExistingSecret }}
            - name: EJBCA_SERVER_CERT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.ejbcaKeystoreExistingSecret }}
                  key: keystore-password
            {{- end }}
            - name: EJBCA_ADMIN_USERNAME
              value: {{ .Values.ejbcaAdminUsername | quote }}
            - name: EJBCA_DATABASE_HOST
              value: {{ template "ejbca.databaseHost" . }}
            - name: EJBCA_DATABASE_PORT
              value: {{ template "ejbca.databasePort" . }}
            - name: EJBCA_DATABASE_NAME
              value: {{ template "ejbca.databaseName" . }}
            - name: EJBCA_DATABASE_USERNAME
              value: {{ template "ejbca.databaseUsername" . }}
            {{- if .Values.ejbcaKeystoreExistingSecret }}
            - name: EJBCA_SERVER_CERT_FILE
              value: /bitnami/tls/keystore.jks
            {{- end }}
            {{- if .Values.ejbcaJavaOpts }}
            - name: EJBCA_JAVA_OPTS
              value: {{ .Values.ejbcaJavaOpts | quote }}
            {{- end }}
            {{- if .Values.ejbcaHttpsServerHostname }}
            - name: EJBCA_HTTPS_SERVER_HOSTNAME
              value: {{ .Values.ejbcaHttpsServerHostname | quote }}
            {{- end }}
            {{- if .Values.ejbcaCA }}
            {{- if .Values.ejbcaCA.name }}
            - name: EJBCA_CA_NAME
              value: {{ .Values.ejbcaCA.name | quote }}
            {{- end }}
            {{- if .Values.ejbcaCA.baseDN }}
            - name: EJBCA_BASE_DN
              value: {{ .Values.ejbcaCA.baseDN | quote }}
            {{- end }}
            {{- end }}
            {{- if .Values.extraEnv }}
            {{- include "ejbca.tplValue" (dict "value" .Values.extraEnv "context" $) | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
            - name: https
              containerPort: 8443
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            httpGet:
              path: /publicweb/healthcheck/ejbcahealth
              port: http
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            httpGet:
              path: /publicweb/healthcheck/ejbcahealth
              port: http
          {{- end }}
          volumeMounts:
            - name: ejbca-data
              mountPath: /bitnami/ejbca
              subPath: ejbca
            {{- if .Values.ejbcaKeystoreExistingSecret }}
            - name: ejbca-keystore
              mountPath: /bitnami/tls/keystore.jks
              subPath: "keystore.jks"
            {{- end }}
            {{- if .Values.extraVolumeMounts }}
            {{- include "ejbca.tplValue" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
        {{- if .Values.sidecars }}
        {{- include "ejbca.tplValue" (dict "value" .Values.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
          {{- if .Values.ejbcaKeystoreExistingSecret }}
        - name: ejbca-keystore
          secret:
            secretName: {{ .Values.ejbcaKeystoreExistingSecret }}
            items:
            - key: "keystore.jks"
              path: "keystore.jks"
          {{- end }}
        - name: ejbca-data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "ejbca.fullname" .) }}
          {{- else }}
          emptyDir: {}
          {{ end }}
        {{- if .Values.extraVolumes }}
        {{- include "ejbca.tplValue" (dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
