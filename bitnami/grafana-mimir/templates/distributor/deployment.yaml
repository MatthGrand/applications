{{- if .Values.distributor.enabled }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "grafana-mimir.distributor.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/part-of: grafana-mimir
    app.kubernetes.io/component: distributor
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.distributor.replicaCount }}
  {{- if .Values.distributor.updateStrategy }}
  strategy: {{- toYaml .Values.distributor.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/part-of: grafana-mimir
      app.kubernetes.io/component: distributor
  template:
    metadata:
      {{- if .Values.distributor.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.distributor.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/part-of: grafana-mimir
        app.kubernetes.io/component: distributor
        mimir-gossip-member: "true"
        {{- if .Values.distributor.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.distributor.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "grafana-mimir.serviceAccountName" . }}
      {{- include "grafana-mimir.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.distributor.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.distributor.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.distributor.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.distributor.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.distributor.podAffinityPreset "component" "%%COMPONENT_NAME%%" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.distributor.podAntiAffinityPreset "component" "%%COMPONENT_NAME%%" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.distributor.nodeAffinityPreset.type "key" .Values.distributor.nodeAffinityPreset.key "values" .Values.distributor.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.distributor.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.distributor.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.distributor.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.distributor.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.distributor.priorityClassName }}
      priorityClassName: {{ .Values.distributor.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.distributor.schedulerName }}
      schedulerName: {{ .Values.distributor.schedulerName | quote }}
      {{- end }}
      {{- if .Values.distributor.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.distributor.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.distributor.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.distributor.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.distributor.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.distributor.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if .Values.distributor.initContainers }}
      initContainers:
        {{- include "common.tplvalues.render" (dict "value" .Values.distributor.initContainers "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: grafana-mimir-distributor
          image: {{ template "grafana-mimir.image" . }}
          imagePullPolicy: {{ .Values.mimir.image.pullPolicy }}
          {{- if .Values.distributor.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.distributor.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.distributor.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.distributor.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.distributor.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.distributor.args "context" $) | nindent 12 }}
          {{- else }}
          args:
            - -target=distributor
            - "-config.expand-env=true"
            - -config.file={{ .Values.mimir.dataDir }}/conf/mimir.yaml
            {{- if .Values.ingester.zoneAwareReplication.migration.enabled }}
              {{- if not .Values.ingester.zoneAwareReplication.migration.writePath }}
            - "-ingester.ring.zone-awareness-enabled=false"
              {{- end }}
              {{- if .Values.ingester.zoneAwareReplication.migration.excludeDefaultZone }}
            - "-ingester.ring.excluded-zones=zone-default"
              {{- end }}
            {{- end }}
            {{- if .Values.distributor.extraArgs }}
            {{- include "common.tplvalues.render" (dict "value" .Values.distributor.extraArgs "context" $) | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- if .Values.distributor.extraEnvVars }}
          env: {{- include "common.tplvalues.render" (dict "value" .Values.distributor.extraEnvVars "context" $) | nindent 12 }}
          {{- end }}
          envFrom:
            {{- if .Values.distributor.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.distributor.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.distributor.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.distributor.extraEnvVarsSecret "context" $) }}
            {{- end }}
          ports:
            - containerPort: {{ .Values.loki.containerPorts.http }}
              name: http
            - containerPort: {{ .Values.loki.containerPorts.memberlist }}
              name: memberlist
            - containerPort: {{ .Values.loki.containerPorts.grpc }}
              name: grpc
          {{- if not .Values.diagnosticMode.enabled }}
          {{- if .Values.distributor.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.distributor.customLivenessProbe "context" $) | nindent 12 }}
          {{- else if .Values.distributor.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.distributor.livenessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /ready
              port: http-metrics
          {{- end }}
          {{- if .Values.distributor.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.distributor.customReadinessProbe "context" $) | nindent 12 }}
          {{- else if .Values.distributor.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.distributor.readinessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /ready
              port: http-metrics
          {{- end }}
          {{- if .Values.distributor.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.distributor.customStartupProbe "context" $) | nindent 12 }}
          {{- else if .Values.distributor.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.distributor.startupProbe "enabled") "context" $) | nindent 12 }}
            tcpSocket:
              port: http-metrics
          {{- end }}
          {{- end }}
          {{- if .Values.distributor.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.distributor.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: mimir-config
              mountPath: {{ .Values.mimir.dataDir }}/conf/mimir.yaml
              subPath: mimir.yaml
            - name: data
              mountPath: {{ .Values.mimir.dataDir }}/mimir/distributor
          {{- if .Values.distributor.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.distributor.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
        {{- if .Values.distributor.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.distributor.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: data
          {{- if .Values.distributor.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.distributor.persistence.existingClaim | default (include "grafana-mimir.distributor.fullname" .) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: mimir-config
          configMap:
            name: {{ template "grafana-mimir.mimir.configmapName" . }}
        {{- if .Values.distributor.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.distributor.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
{{- end }}