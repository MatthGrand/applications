{{- if .Values.query-frontend.enabled }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "grafana-mimir.query-frontend.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/part-of: grafana-mimir
    app.kubernetes.io/component: query-frontend
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.query-frontend.replicaCount }}
  {{- if .Values.query-frontend.updateStrategy }}
  strategy: {{- toYaml .Values.query-frontend.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/part-of: grafana-mimir
      app.kubernetes.io/component: query-frontend
  template:
    metadata:
      {{- if .Values.query-frontend.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.query-frontend.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/part-of: grafana-mimir
        app.kubernetes.io/component: query-frontend
        {{- if .Values.query-frontend.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.query-frontend.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "grafana-mimir.serviceAccountName" . }}
      {{- include "grafana-mimir.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.query-frontend.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.query-frontend.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.query-frontend.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.query-frontend.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.query-frontend.podAffinityPreset "component" "%%COMPONENT_NAME%%" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.query-frontend.podAntiAffinityPreset "component" "%%COMPONENT_NAME%%" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.query-frontend.nodeAffinityPreset.type "key" .Values.query-frontend.nodeAffinityPreset.key "values" .Values.query-frontend.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.query-frontend.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.query-frontend.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.query-frontend.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.query-frontend.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.query-frontend.priorityClassName }}
      priorityClassName: {{ .Values.query-frontend.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.query-frontend.schedulerName }}
      schedulerName: {{ .Values.query-frontend.schedulerName | quote }}
      {{- end }}
      {{- if .Values.query-frontend.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.query-frontend.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.query-frontend.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.query-frontend.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.query-frontend.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.query-frontend.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if .Values.query-frontend.initContainers }}
      initContainers:
        {{- include "common.tplvalues.render" (dict "value" .Values.query-frontend.initContainers "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: grafana-mimir-query-frontend
          image: {{ template "grafana-mimir.image" . }}
          imagePullPolicy: {{ .Values.mimir.image.pullPolicy }}
          {{- if .Values.query-frontend.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.query-frontend.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.query-frontend.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.query-frontend.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.query-frontend.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.query-frontend.args "context" $) | nindent 12 }}
          {{- else }}
          args:
            - -target=query-frontend
            - "-config.expand-env=true"
            - -config.file={{ .Values.mimir.dataDir }}/conf/mimir.yaml
            {{- if .Values.query-frontend.extraArgs }}
            {{- include "common.tplvalues.render" (dict "value" .Values.query-frontend.extraArgs "context" $) | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- if .Values.query-frontend.extraEnvVars }}
          env: {{- include "common.tplvalues.render" (dict "value" .Values.query-frontend.extraEnvVars "context" $) | nindent 12 }}
          {{- end }}
          envFrom:
            {{- if .Values.query-frontend.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.query-frontend.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.query-frontend.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.query-frontend.extraEnvVarsSecret "context" $) }}
            {{- end }}
          ports:
            - containerPort: {{ .Values.mimir.containerPorts.http }}
              name: http
            - containerPort: {{ .Values.mimir.containerPorts.memberlist }}
              name: memberlist
            - containerPort: {{ .Values.mimir.containerPorts.grpc }}
              name: grpc
          {{- if not .Values.diagnosticMode.enabled }}
          {{- if .Values.query-frontend.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.query-frontend.customLivenessProbe "context" $) | nindent 12 }}
          {{- else if .Values.query-frontend.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.query-frontend.livenessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /ready
              port: http-metrics
          {{- end }}
          {{- if .Values.query-frontend.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.query-frontend.customReadinessProbe "context" $) | nindent 12 }}
          {{- else if .Values.query-frontend.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.query-frontend.readinessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /ready
              port: http-metrics
          {{- end }}
          {{- if .Values.query-frontend.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.query-frontend.customStartupProbe "context" $) | nindent 12 }}
          {{- else if .Values.query-frontend.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.query-frontend.startupProbe "enabled") "context" $) | nindent 12 }}
            tcpSocket:
              port: http-metrics
          {{- end }}
          {{- end }}
          {{- if .Values.query-frontend.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.query-frontend.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: mimir-config
              mountPath: {{ .Values.mimir.dataDir }}/conf/mimir.yaml
              subPath: mimir.yaml
            - name: data
              mountPath: {{ .Values.mimir.dataDir }}/mimir/query-frontend
          {{- if .Values.query-frontend.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.query-frontend.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
        {{- if .Values.query-frontend.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.query-frontend.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: data
          {{- if .Values.query-frontend.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.query-frontend.persistence.existingClaim | default (include "grafana-mimir.query-frontend.fullname" .) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: mimir-config
          configMap:
            name: {{ template "grafana-mimir.mimir.configmapName" . }}
        {{- if .Values.query-frontend.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.query-frontend.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
{{- end }}