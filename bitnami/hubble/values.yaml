# Copyright Broadcom, Inc. All Rights Reserved.
# SPDX-License-Identifier: APACHE-2.0

## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
##

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## e.g:
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""
  ## Compatibility adaptations for Kubernetes platforms
  ##
  compatibility:
    ## Compatibility adaptations for Openshift
    ##
    openshift:
      ## @param global.compatibility.openshift.adaptSecurityContext Adapt the securityContext sections of the deployment to make them compatible with Openshift restricted-v2 SCC: remove runAsUser, runAsGroup and fsGroup and let the platform use their allowed default IDs. Possible values: auto (apply if the detected running cluster is Openshift), force (perform the adaptation always), disabled (do not perform adaptation)
      ##
      adaptSecurityContext: auto

## @section Common parameters
##

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""
## @param nameOverride String to partially override common.names.name
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param namespaceOverride String to fully override common.names.namespace
##
namespaceOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []
## Diagnostic mode
## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
## @param diagnosticMode.command Command to override all containers in the chart release
## @param diagnosticMode.args Args to override all containers in the chart release
##
diagnosticMode:
  enabled: false
  command:
    - sleep
  args:
    - infinity
## TLS configuration
##
tls:
  ## @param tls.enabled Enable TLS for communications
  ##
  enabled: true
  ## @param tls.autoGenerated.enabled Enable automatic generation of certificates for TLS
  ## @param tls.autoGenerated.engine Mechanism to generate the certificates (allowed values: helm, cert-manager)
  autoGenerated:
    enabled: true
    engine: helm
    ## @param tls.autoGenerated.certManager.existingIssuer The name of an existing Issuer to use for generating the certificates (only for `cert-manager` engine)
    ## @param tls.autoGenerated.certManager.existingIssuerKind Existing Issuer kind, defaults to Issuer (only for `cert-manager` engine)
    ## @param tls.autoGenerated.certManager.keyAlgorithm Key algorithm for the certificates (only for `cert-manager` engine)
    ## @param tls.autoGenerated.certManager.keySize Key size for the certificates (only for `cert-manager` engine)
    ## @param tls.autoGenerated.certManager.duration Duration for the certificates (only for `cert-manager` engine)
    ## @param tls.autoGenerated.certManager.renewBefore Renewal period for the certificates (only for `cert-manager` engine)
    certManager:
      existingIssuer: ""
      existingIssuerKind: ""
      keySize: 2048
      keyAlgorithm: RSA
      duration: 2160h
      renewBefore: 360h
  ## @param tls.ca CA certificate for TLS. Ignored if `tls.existingCASecret` is set
  ## @param tls.existingCASecret The name of an existing Secret containing the CA certificate for TLS
  ## @param tls.relay.cert TLS certificate for Hubble Relay. Ignored if `tls.relay.existingSecret` is set
  ## @param tls.relay.key TLS key for Hubble Relay. Ignored if `tls.relay.existingSecret` is set
  ## @param tls.relay.existingSecret The name of an existing Secret containing the Hubble Relay certificates for TLS
  ## @param tls.client.cert TLS certificate for Hubble Relay client(s). Ignored if `tls.client.existingSecret` is set
  ## @param tls.client.key TLS key for Hubble Relay client(s). Ignored if `tls.client.existingSecret` is set
  ## @param tls.client.existingSecret The name of an existing Secret containing the Hubble Relay client(s) certificates for TLS
  ca: ""
  existingCASecret: ""
  relay:
    cert: ""
    key: ""
    existingSecret: ""
  client:
    cert: ""
    key: ""
    existingSecret: ""

## @section Hubble Relay Parameters
##
relay:
  ## Bitnami Hubble Relay image
  ## ref: https://hub.docker.com/r/bitnami/hubble-relay/tags/
  ## @param relay.image.registry [default: REGISTRY_NAME] Hubble Relay image registry
  ## @param relay.image.repository [default: REPOSITORY_NAME/hubble-relay] Hubble Relay image repository
  ## @skip relay.image.tag Hubble Relay image tag (immutable tags are recommended)
  ## @param relay.image.digest Hubble Relay image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
  ## @param relay.image.pullPolicy Hubble Relay image pull policy
  ## @param relay.image.pullSecrets Hubble Relay image pull secrets
  ## @param relay.image.debug Enable Hubble Relay image debug mode
  ##
  image:
    registry: docker.io
    repository: bitnami/hubble-relay
    tag: 1.15.5-debian-12-r0
    digest: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    debug: false
  ## @param relay.replicaCount Number of Hubble Relay replicas to deploy
  ##
  replicaCount: 1
  ## @param relay.containerPorts.grpc Hubble Relay gRPC container port
  ## @param relay.containerPorts.pprof Hubble Relay pprof container port
  ## @param relay.containerPorts.gops Hubble Relay gops container port
  ## @param relay.containerPorts.metrics Hubble Relay metrics container port
  ##
  containerPorts:
    grpc: 4245
    pprof: 6062
    gops: 9893
    metrics: 9966
  ## @param relay.extraContainerPorts Optionally specify extra list of additional ports for Hubble Relay containers
  ## e.g:
  ## extraContainerPorts:
  ##   - name: myservice
  ##     containerPort: 9090
  ##
  extraContainerPorts: []
  ## Configure extra options for Hubble Relay containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param relay.livenessProbe.enabled Enable livenessProbe on Hubble Relay containers
  ## @param relay.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param relay.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param relay.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param relay.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param relay.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 3
    successThreshold: 1
  ## @param relay.readinessProbe.enabled Enable readinessProbe on Hubble Relay containers
  ## @param relay.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param relay.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param relay.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param relay.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param relay.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 3
    successThreshold: 1
  ## @param relay.startupProbe.enabled Enable startupProbe on Hubble Relay containers
  ## @param relay.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param relay.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param relay.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param relay.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param relay.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 0
    periodSeconds: 3
    timeoutSeconds: 1
    failureThreshold: 20
    successThreshold: 1
  ## @param relay.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param relay.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param relay.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## Hubble Relay resource requests and limits
  ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## @param relay.resourcesPreset Set Hubble Relay container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge). This is ignored if relay.resources is set (relay.resources is recommended for production).
  ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
  ##
  resourcesPreset: "nano"
  ## @param relay.resources Set Hubble Relay container requests and limits for different resources like CPU or memory (essential for production workloads)
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 2
  ##     memory: 512Mi
  ##   limits:
  ##     cpu: 3
  ##     memory: 1024Mi
  ##
  resources: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param relay.podSecurityContext.enabled Enable Hubble Relay pods' Security Context
  ## @param relay.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy for Hubble Relay pods
  ## @param relay.podSecurityContext.sysctls Set kernel settings using the sysctl interface for Hubble Relay pods
  ## @param relay.podSecurityContext.supplementalGroups Set filesystem extra groups for Hubble Relay pods
  ## @param relay.podSecurityContext.fsGroup Set fsGroup in Hubble Relay pods' Security Context
  ##
  podSecurityContext:
    enabled: true
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param relay.containerSecurityContext.enabled Enabled Hubble Relay container' Security Context
  ## @param relay.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in Hubble Relay container
  ## @param relay.containerSecurityContext.runAsUser Set runAsUser in Hubble Relay container' Security Context
  ## @param relay.containerSecurityContext.runAsGroup Set runAsGroup in Hubble Relay container' Security Context
  ## @param relay.containerSecurityContext.runAsNonRoot Set runAsNonRoot in Hubble Relay container' Security Context
  ## @param relay.containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in Hubble Relay container' Security Context
  ## @param relay.containerSecurityContext.privileged Set privileged in Hubble Relay container' Security Context
  ## @param relay.containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in Hubble Relay container' Security Context
  ## @param relay.containerSecurityContext.capabilities.drop List of capabilities to be dropped in Hubble Relay container
  ## @param relay.containerSecurityContext.seccompProfile.type Set seccomp profile in Hubble Relay container
  ##
  containerSecurityContext:
    enabled: true
    seLinuxOptions: {}
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
    readOnlyRootFilesystem: true
    privileged: false
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
  ## @param relay.configuration Specify content for Hubble Relay configuration (basic one auto-generated based on other values otherwise)
  ##
  configuration: {}
  ## @param relay.overrideConfiguration Hubble Relay configuration override. Values defined here takes precedence over the ones defined at `relay.configuration`
  ##
  overrideConfiguration: {}
  ## @param relay.existingConfigmap The name of an existing ConfigMap with your custom configuration for Hubble Relay
  ##
  existingConfigmap:
  ## @param relay.enableGops Enable gops for Hubble Relay
  ##
  enableGops: false
  ## @param relay.enablePprof Enable pprof for Hubble Relay
  ##
  enablePprof: false
  ## @param relay.command Override default Hubble Relay container command (useful when using custom images)
  ##
  command: []
  ## @param relay.args Override default Hubble Relay container args (useful when using custom images)
  ##
  args: []
  ## @param relay.automountServiceAccountToken Mount Service Account token in Hubble Relay pods
  ##
  automountServiceAccountToken: true
  ## @param relay.hostAliases Hubble Relay pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param relay.deploymentAnnotations Annotations for Hubble Relay deployment
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  deploymentAnnotations: {}
  ## @param relay.podLabels Extra labels for Hubble Relay pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param relay.podAnnotations Annotations for Hubble Relay pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param relay.podAffinityPreset Pod affinity preset. Ignored if `relay.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param relay.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `relay.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node relay.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param relay.nodeAffinityPreset.type Node affinity preset type. Ignored if `relay.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param relay.nodeAffinityPreset.key Node label key to match. Ignored if `relay.affinity` is set
    ##
    key: ""
    ## @param relay.nodeAffinityPreset.values Node label values to match. Ignored if `relay.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param relay.affinity Affinity for Hubble Relay pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `relay.podAffinityPreset`, `relay.podAntiAffinityPreset`, and `relay.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param relay.nodeSelector Node labels for Hubble Relay pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param relay.tolerations Tolerations for Hubble Relay pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param relay.updateStrategy.type Hubble Relay deployment strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  updateStrategy:
    ## Can be set to RollingUpdate or Recreate
    ##
    type: RollingUpdate
  ## @param relay.priorityClassName Hubble Relay pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param relay.topologySpreadConstraints Topology Spread Constraints for Hubble Relay pod assignment spread across your cluster among failure-domains
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param relay.schedulerName Name of the k8s scheduler (other than default) for Hubble Relay pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param relay.terminationGracePeriodSeconds Seconds Hubble Relay pods need to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## @param relay.lifecycleHooks for Hubble Relay containers to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param relay.extraEnvVars Array with extra environment variables to add to Hubble Relay containers
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param relay.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Hubble Relay containers
  ##
  extraEnvVarsCM: ""
  ## @param relay.extraEnvVarsSecret Name of existing Secret containing extra env vars for Hubble Relay containers
  ##
  extraEnvVarsSecret: ""
  ## @param relay.extraVolumes Optionally specify extra list of additional volumes for the Hubble Relay pods
  ##
  extraVolumes: []
  ## @param relay.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Hubble Relay containers
  ##
  extraVolumeMounts: []
  ## @param relay.sidecars Add additional sidecar containers to the Hubble Relay pods
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param relay.initContainers Add additional init containers to the Hubble Relay pods
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []
  ## Pod Disruption Budget configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb
  ## @param relay.pdb.create Enable/disable a Pod Disruption Budget creation
  ## @param relay.pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
  ## @param relay.pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable. Defaults to `1` if both `relay.pdb.minAvailable` and `relay.pdb.maxUnavailable` are empty.
  ##
  pdb:
    create: true
    minAvailable: ""
    maxUnavailable: ""
  ## Autoscaling configuration
  ## ref: https://kubernetes.io/docs/concepts/workloads/autoscaling/
  ##
  autoscaling:
    ## @param relay.autoscaling.vpa.enabled Enable VPA for Hubble Relay pods
    ## @param relay.autoscaling.vpa.annotations Annotations for VPA resource
    ## @param relay.autoscaling.vpa.controlledResources VPA List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory
    ## @param relay.autoscaling.vpa.maxAllowed VPA Max allowed resources for the pod
    ## @param relay.autoscaling.vpa.minAllowed VPA Min allowed resources for the pod
    ##
    vpa:
      enabled: false
      annotations: {}
      controlledResources: []
      maxAllowed: {}
      minAllowed: {}
      ## @param relay.autoscaling.vpa.updatePolicy.updateMode Autoscaling update policy
      ## Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod
      ## Possible values are "Off", "Initial", "Recreate", and "Auto".
      ##
      updatePolicy:
        updateMode: Auto
    ## @param relay.autoscaling.hpa.enabled Enable HPA for Hubble Relay pods
    ## @param relay.autoscaling.hpa.minReplicas Minimum number of replicas
    ## @param relay.autoscaling.hpa.maxReplicas Maximum number of replicas
    ## @param relay.autoscaling.hpa.targetCPU Target CPU utilization percentage
    ## @param relay.autoscaling.hpa.targetMemory Target Memory utilization percentage
    ##
    hpa:
      enabled: false
      minReplicas: ""
      maxReplicas: ""
      targetCPU: ""
      targetMemory: ""
  ## Hubble Relay ServiceAccount configuration
  ##
  serviceAccount:
    ## @param relay.serviceAccount.create Specifies whether a ServiceAccount should be created for Hubble Relay
    ##
    create: true
    ## @param relay.serviceAccount.name The name of the ServiceAccount to use for Hubble Relay
    ## If not set and create is true, a name is generated using the hubble.relay.fullname template
    ##
    name: ""
    ## @param relay.serviceAccount.annotations Additional Service Account annotations (evaluated as a template)
    ##
    annotations: {}
    ## @param relay.serviceAccount.automountServiceAccountToken Automount service account token for the server service account
    ##
    automountServiceAccountToken: true

  ## @section Hubble Relay Traffic Exposure Parameters
  ## Hubble Relay service parameters
  ##
  service:
    ## @param relay.service.type Hubble Relay service type
    ##
    type: LoadBalancer
    ## @param relay.service.ports.grpc Hubble Relay service gRPC port
    ## @param relay.service.ports.pprof Hubble Relay service pprof port
    ## @param relay.service.ports.gops Hubble Relay service gops port
    ## @param relay.service.ports.metrics Hubble Relay service metrics port
    ##
    ports:
      grpc: 4245
      pprof: 6062
      gops: 9893
      metrics: 9966
    ## Node ports to expose
    ## @param relay.service.nodePorts.grpc Node port for gRPC
    ## @param relay.service.nodePorts.pprof Node port for pprof
    ## @param relay.service.nodePorts.gops Node port for gops
    ## @param relay.service.nodePorts.metrics Node port for metrics
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      grpc: ""
      pprof: ""
      gops: ""
      metrics: ""
    ## @param relay.service.clusterIP Hubble Relay service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param relay.service.loadBalancerIP Hubble Relay service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param relay.service.loadBalancerSourceRanges Hubble Relay service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param relay.service.externalTrafficPolicy Hubble Relay service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param relay.service.annotations Additional custom annotations for Hubble Relay service
    ##
    annotations: {}
    ## @param relay.service.extraPorts Extra ports to expose in Hubble Relay service (normally used with the `sidecars` value)
    ##
    extraPorts: []
    ## @param relay.service.sessionAffinity Control where client requests go, to the same pod or round-robin
    ## Values: ClientIP or None
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
    ##
    sessionAffinity: None
    ## @param relay.service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   clientIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}
  ## Network Policies
  ## Ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
  ##
  networkPolicy:
    ## @param relay.networkPolicy.enabled Specifies whether a NetworkPolicy should be created for Hubble Relay
    ##
    enabled: true
    ## @param relay.networkPolicy.allowExternal Don't require server label for connections
    ## The Policy model to apply. When set to false, only pods with the correct
    ## server label will have network access to the ports server is listening
    ## on. When true, server will accept connections from any source
    ## (with the correct destination port).
    ##
    allowExternal: true
    ## @param relay.networkPolicy.allowExternalEgress Allow the pod to access any range of port and all destinations.
    ##
    allowExternalEgress: true
    ## @param relay.networkPolicy.extraIngress [array] Add extra ingress rules to the NetworkPolicy
    ## e.g:
    ## extraIngress:
    ##   - ports:
    ##       - port: 1234
    ##     from:
    ##       - podSelector:
    ##           - matchLabels:
    ##               - role: frontend
    ##       - podSelector:
    ##           - matchExpressions:
    ##               - key: role
    ##                 operator: In
    ##                 values:
    ##                   - frontend
    extraIngress: []
    ## @param relay.networkPolicy.extraEgress [array] Add extra ingress rules to the NetworkPolicy (ignored if allowExternalEgress=true)
    ## e.g:
    ## extraEgress:
    ##   - ports:
    ##       - port: 1234
    ##     to:
    ##       - podSelector:
    ##           - matchLabels:
    ##               - role: frontend
    ##       - podSelector:
    ##           - matchExpressions:
    ##               - key: role
    ##                 operator: In
    ##                 values:
    ##                   - frontend
    ##
    extraEgress: []
    ## @param relay.networkPolicy.ingressNSMatchLabels [object] Labels to match to allow traffic from other namespaces
    ## @param relay.networkPolicy.ingressNSPodMatchLabels [object] Pod labels to match to allow traffic from other namespaces
    ##
    ingressNSMatchLabels: {}
    ingressNSPodMatchLabels: {}

  ## @section Hubble Relay Metrics Parameters
  ##
  metrics:
    ## @param relay.metrics.enabled Enable the export of Prometheus metrics on Hubble Relay
    ##
    enabled: false
    ## Prometheus Operator ServiceMonitor configuration
    ##
    serviceMonitor:
      ## @param relay.metrics.serviceMonitor.enabled if `true`, creates a Prometheus Operator ServiceMonitor (also requires `relay.metrics.enabled` to be `true`)
      ##
      enabled: false
      ## @param relay.metrics.serviceMonitor.namespace Namespace in which Prometheus is running
      ##
      namespace: ""
      ## @param relay.metrics.serviceMonitor.annotations Additional custom annotations for the ServiceMonitor
      ##
      annotations: {}
      ## @param relay.metrics.serviceMonitor.labels Extra labels for the ServiceMonitor
      ##
      labels: {}
      ## @param relay.metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in Prometheus
      ##
      jobLabel: ""
      ## @param relay.metrics.serviceMonitor.honorLabels honorLabels chooses the metric's labels on collisions with target labels
      ##
      honorLabels: false
      ## @param relay.metrics.serviceMonitor.interval Interval at which metrics should be scraped.
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
      ## e.g:
      ## interval: 10s
      ##
      interval: ""
      ## @param relay.metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
      ## e.g:
      ## scrapeTimeout: 10s
      ##
      scrapeTimeout: ""
      ## @param relay.metrics.serviceMonitor.metricRelabelings Specify additional relabeling of metrics
      ##
      metricRelabelings: []
      ## @param relay.metrics.serviceMonitor.relabelings Specify general relabeling
      ##
      relabelings: []
      ## @param relay.metrics.serviceMonitor.selector Prometheus instance selector labels
      ## ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration
      ## selector:
      ##   prometheus: my-prometheus
      ##
      selector: {}

## @section Hubble UI Parameters
##
ui:
  ## @param ui.enabled Enable Hubble UI
  ##
  enabled: false
  ## Frontend specific parameters
  ##
  frontend:
    ## Bitnami Hubble UI image
    ## ref: https://hub.docker.com/r/bitnami/hubble-ui/tags/
    ## @param ui.frontend.image.registry [default: REGISTRY_NAME] Hubble UI image registry
    ## @param ui.frontend.image.repository [default: REPOSITORY_NAME/hubble-ui] Hubble UI image repository
    ## @skip ui.frontend.image.tag Hubble UI image tag (immutable tags are recommended)
    ## @param ui.frontend.image.digest Hubble UI image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
    ## @param ui.frontend.image.pullPolicy Hubble UI image pull policy
    ## @param ui.frontend.image.pullSecrets Hubble UI image pull secrets
    ## @param ui.frontend.image.debug Enable Hubble UI image debug mode
    ##
    image:
      registry: docker.io
      repository: bitnami/hubble-ui
      tag: 0.13.0-debian-12-r0
      digest: ""
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
      ##
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## e.g:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []
      debug: false
    ## @param ui.frontend.containerPorts.http Hubble UI frontend HTTP container port
    ##
    containerPorts:
      http: 8081
    ## @param ui.frontend.extraContainerPorts Optionally specify extra list of additional ports for Hubble UI frontend containers
    ## e.g:
    ## extraContainerPorts:
    ##   - name: myservice
    ##     containerPort: 9090
    ##
    extraContainerPorts: []
    ## Configure extra options for Hubble UI frontend containers' liveness and readiness probes
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param ui.frontend.livenessProbe.enabled Enable livenessProbe on Hubble UI frontend containers
    ## @param ui.frontend.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param ui.frontend.livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param ui.frontend.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param ui.frontend.livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param ui.frontend.livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 3
      failureThreshold: 3
      successThreshold: 1
    ## @param ui.frontend.readinessProbe.enabled Enable readinessProbe on Hubble UI frontend containers
    ## @param ui.frontend.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param ui.frontend.readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param ui.frontend.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param ui.frontend.readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param ui.frontend.readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 3
      failureThreshold: 3
      successThreshold: 1
    ## @param ui.frontend.startupProbe.enabled Enable startupProbe on Hubble UI frontend containers
    ## @param ui.frontend.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param ui.frontend.startupProbe.periodSeconds Period seconds for startupProbe
    ## @param ui.frontend.startupProbe.timeoutSeconds Timeout seconds for startupProbe
    ## @param ui.frontend.startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param ui.frontend.startupProbe.successThreshold Success threshold for startupProbe
    ##
    startupProbe:
      enabled: false
      initialDelaySeconds: 0
      periodSeconds: 3
      timeoutSeconds: 1
      failureThreshold: 20
      successThreshold: 1
    ## @param ui.frontend.customLivenessProbe Custom livenessProbe that overrides the default one
    ##
    customLivenessProbe: {}
    ## @param ui.frontend.customReadinessProbe Custom readinessProbe that overrides the default one
    ##
    customReadinessProbe: {}
    ## @param ui.frontend.customStartupProbe Custom startupProbe that overrides the default one
    ##
    customStartupProbe: {}
    ## Hubble UI frontend resource requests and limits
    ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    ## @param ui.frontend.resourcesPreset Set Hubble UI frontend container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge). This is ignored if ui.frontend.resources is set (ui.frontend.resources is recommended for production).
    ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
    ##
    resourcesPreset: "nano"
    ## @param ui.frontend.resources Set Hubble UI frontend container requests and limits for different resources like CPU or memory (essential for production workloads)
    ## Example:
    ## resources:
    ##   requests:
    ##     cpu: 2
    ##     memory: 512Mi
    ##   limits:
    ##     cpu: 3
    ##     memory: 1024Mi
    ##
    resources: {}
    ## Configure Container Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
    ## @param ui.frontend.containerSecurityContext.enabled Enabled Hubble UI frontend container' Security Context
    ## @param ui.frontend.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in Hubble UI frontend container
    ## @param ui.frontend.containerSecurityContext.runAsUser Set runAsUser in Hubble UI frontend container' Security Context
    ## @param ui.frontend.containerSecurityContext.runAsGroup Set runAsGroup in Hubble UI frontend container' Security Context
    ## @param ui.frontend.containerSecurityContext.runAsNonRoot Set runAsNonRoot in Hubble UI frontend container' Security Context
    ## @param ui.frontend.containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in Hubble UI frontend container' Security Context
    ## @param ui.frontend.containerSecurityContext.privileged Set privileged in Hubble UI frontend container' Security Context
    ## @param ui.frontend.containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in Hubble UI frontend container' Security Context
    ## @param ui.frontend.containerSecurityContext.capabilities.drop List of capabilities to be dropped in Hubble UI frontend container
    ## @param ui.frontend.containerSecurityContext.seccompProfile.type Set seccomp profile in Hubble UI frontend container
    ##
    containerSecurityContext:
      enabled: true
      seLinuxOptions: {}
      runAsUser: 1001
      runAsGroup: 1001
      runAsNonRoot: true
      readOnlyRootFilesystem: true
      privileged: false
      allowPrivilegeEscalation: false
      capabilities:
        drop: ["ALL"]
      seccompProfile:
        type: "RuntimeDefault"
    ## @param ui.frontend.enableIPv6 Enable IPv6 for Hubble UI frontend
    ##
    enableIPv6: false
    ## @param ui.frontend.command Override default Hubble UI frontend container command (useful when using custom images)
    ##
    command: []
    ## @param ui.frontend.args Override default Hubble UI frontend container args (useful when using custom images)
    ##
    args: []
    ## @param ui.frontend.lifecycleHooks for Hubble UI frontend containers to automate configuration before or after startup
    ##
    lifecycleHooks: {}
    ## @param ui.frontend.extraEnvVars Array with extra environment variables to add to Hubble UI frontend containers
    ## e.g:
    ## extraEnvVars:
    ##   - name: FOO
    ##     value: "bar"
    ##
    extraEnvVars: []
    ## @param ui.frontend.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Hubble UI frontend containers
    ##
    extraEnvVarsCM: ""
    ## @param ui.frontend.extraEnvVarsSecret Name of existing Secret containing extra env vars for Hubble UI frontend containers
    ##
    extraEnvVarsSecret: ""
    ## @param ui.frontend.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Hubble UI frontend containers
    ##
    extraVolumeMounts: []
  ## Backend specific parameters
  ##
  backend:
    ## Bitnami Hubble UI Backend image
    ## ref: https://hub.docker.com/r/bitnami/hubble-ui-backend/tags/
    ## @param ui.backend.image.registry [default: REGISTRY_NAME] Hubble UI Backend image registry
    ## @param ui.backend.image.repository [default: REPOSITORY_NAME/hubble-ui-backend] Hubble UI Backend image repository
    ## @skip ui.backend.image.tag Hubble UI Backend image tag (immutable tags are recommended)
    ## @param ui.backend.image.digest Hubble UI Backend image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
    ## @param ui.backend.image.pullPolicy Hubble UI Backend image pull policy
    ## @param ui.backend.image.pullSecrets Hubble UI Backend image pull secrets
    ## @param ui.backend.image.debug Enable Hubble UI Backend image debug mode
    ##
    image:
      registry: docker.io
      repository: bitnami/hubble-ui-backend
      tag: 0.13.0-debian-12-r0
      digest: ""
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
      ##
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## e.g:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []
      debug: false
    ## @param ui.backend.containerPorts.http Hubble UI backend HTTP container port
    ##
    containerPorts:
      http: 8090
    ## @param ui.backend.extraContainerPorts Optionally specify extra list of additional ports for Hubble UI backend containers
    ## e.g:
    ## extraContainerPorts:
    ##   - name: myservice
    ##     containerPort: 9090
    ##
    extraContainerPorts: []
    ## Configure extra options for Hubble UI backend containers' liveness and readiness probes
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param ui.backend.livenessProbe.enabled Enable livenessProbe on Hubble UI backend containers
    ## @param ui.backend.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param ui.backend.livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param ui.backend.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param ui.backend.livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param ui.backend.livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 3
      failureThreshold: 3
      successThreshold: 1
    ## @param ui.backend.readinessProbe.enabled Enable readinessProbe on Hubble UI backend containers
    ## @param ui.backend.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param ui.backend.readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param ui.backend.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param ui.backend.readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param ui.backend.readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 3
      failureThreshold: 3
      successThreshold: 1
    ## @param ui.backend.startupProbe.enabled Enable startupProbe on Hubble UI backend containers
    ## @param ui.backend.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param ui.backend.startupProbe.periodSeconds Period seconds for startupProbe
    ## @param ui.backend.startupProbe.timeoutSeconds Timeout seconds for startupProbe
    ## @param ui.backend.startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param ui.backend.startupProbe.successThreshold Success threshold for startupProbe
    ##
    startupProbe:
      enabled: false
      initialDelaySeconds: 0
      periodSeconds: 3
      timeoutSeconds: 1
      failureThreshold: 20
      successThreshold: 1
    ## @param ui.backend.customLivenessProbe Custom livenessProbe that overrides the default one
    ##
    customLivenessProbe: {}
    ## @param ui.backend.customReadinessProbe Custom readinessProbe that overrides the default one
    ##
    customReadinessProbe: {}
    ## @param ui.backend.customStartupProbe Custom startupProbe that overrides the default one
    ##
    customStartupProbe: {}
    ## Hubble UI backend resource requests and limits
    ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    ## @param ui.backend.resourcesPreset Set Hubble UI backend container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge). This is ignored if ui.backend.resources is set (ui.backend.resources is recommended for production).
    ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
    ##
    resourcesPreset: "nano"
    ## @param ui.backend.resources Set Hubble UI backend container requests and limits for different resources like CPU or memory (essential for production workloads)
    ## Example:
    ## resources:
    ##   requests:
    ##     cpu: 2
    ##     memory: 512Mi
    ##   limits:
    ##     cpu: 3
    ##     memory: 1024Mi
    ##
    resources: {}
    ## Configure Container Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
    ## @param ui.backend.containerSecurityContext.enabled Enabled Hubble UI backend container' Security Context
    ## @param ui.backend.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in Hubble UI backend container
    ## @param ui.backend.containerSecurityContext.runAsUser Set runAsUser in Hubble UI backend container' Security Context
    ## @param ui.backend.containerSecurityContext.runAsGroup Set runAsGroup in Hubble UI backend container' Security Context
    ## @param ui.backend.containerSecurityContext.runAsNonRoot Set runAsNonRoot in Hubble UI backend container' Security Context
    ## @param ui.backend.containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in Hubble UI backend container' Security Context
    ## @param ui.backend.containerSecurityContext.privileged Set privileged in Hubble UI backend container' Security Context
    ## @param ui.backend.containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in Hubble UI backend container' Security Context
    ## @param ui.backend.containerSecurityContext.capabilities.drop List of capabilities to be dropped in Hubble UI backend container
    ## @param ui.backend.containerSecurityContext.seccompProfile.type Set seccomp profile in Hubble UI backend container
    ##
    containerSecurityContext:
      enabled: true
      seLinuxOptions: {}
      runAsUser: 1001
      runAsGroup: 1001
      runAsNonRoot: true
      readOnlyRootFilesystem: true
      privileged: false
      allowPrivilegeEscalation: false
      capabilities:
        drop: ["ALL"]
      seccompProfile:
        type: "RuntimeDefault"
    ## @param ui.backend.command Override default Hubble UI backend container command (useful when using custom images)
    ##
    command: []
    ## @param ui.backend.args Override default Hubble UI backend container args (useful when using custom images)
    ##
    args: []
    ## @param ui.backend.lifecycleHooks for Hubble UI backend containers to automate configuration before or after startup
    ##
    lifecycleHooks: {}
    ## @param ui.backend.extraEnvVars Array with extra environment variables to add to Hubble UI backend containers
    ## e.g:
    ## extraEnvVars:
    ##   - name: FOO
    ##     value: "bar"
    ##
    extraEnvVars: []
    ## @param ui.backend.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Hubble UI backend containers
    ##
    extraEnvVarsCM: ""
    ## @param ui.backend.extraEnvVarsSecret Name of existing Secret containing extra env vars for Hubble UI backend containers
    ##
    extraEnvVarsSecret: ""
    ## @param ui.backend.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Hubble UI backend containers
    ##
    extraVolumeMounts: []
  ## @param ui.replicaCount Number of Hubble UI replicas to deploy
  ##
  replicaCount: 1
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param ui.podSecurityContext.enabled Enable Hubble UI pods' Security Context
  ## @param ui.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy for Hubble UI pods
  ## @param ui.podSecurityContext.sysctls Set kernel settings using the sysctl interface for Hubble UI pods
  ## @param ui.podSecurityContext.supplementalGroups Set filesystem extra groups for Hubble UI pods
  ## @param ui.podSecurityContext.fsGroup Set fsGroup in Hubble UI pods' Security Context
  ##
  podSecurityContext:
    enabled: true
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
    fsGroup: 1001
  ## @param ui.automountServiceAccountToken Mount Service Account token in Hubble UI pods
  ##
  automountServiceAccountToken: true
  ## @param ui.hostAliases Hubble UI pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param ui.deploymentAnnotations Annotations for Hubble UI deployment
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  deploymentAnnotations: {}
  ## @param ui.podLabels Extra labels for Hubble UI pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param ui.podAnnotations Annotations for Hubble UI pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param ui.podAffinityPreset Pod affinity preset. Ignored if `ui.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param ui.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `ui.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node ui.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param ui.nodeAffinityPreset.type Node affinity preset type. Ignored if `ui.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param ui.nodeAffinityPreset.key Node label key to match. Ignored if `ui.affinity` is set
    ##
    key: ""
    ## @param ui.nodeAffinityPreset.values Node label values to match. Ignored if `ui.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param ui.affinity Affinity for Hubble UI pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `ui.podAffinityPreset`, `ui.podAntiAffinityPreset`, and `ui.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param ui.nodeSelector Node labels for Hubble UI pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param ui.tolerations Tolerations for Hubble UI pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param ui.updateStrategy.type Hubble UI deployment strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  updateStrategy:
    ## Can be set to RollingUpdate or Recreate
    ##
    type: RollingUpdate
  ## @param ui.priorityClassName Hubble UI pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param ui.topologySpreadConstraints Topology Spread Constraints for Hubble UI pod assignment spread across your cluster among failure-domains
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param ui.schedulerName Name of the k8s scheduler (other than default) for Hubble UI pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param ui.terminationGracePeriodSeconds Seconds Hubble UI pods need to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## @param ui.extraVolumes Optionally specify extra list of additional volumes for the Hubble UI pods
  ##
  extraVolumes: []
  ## @param ui.sidecars Add additional sidecar containers to the Hubble UI pods
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param ui.initContainers Add additional init containers to the Hubble UI pods
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []
  ## Pod Disruption Budget configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb
  ## @param ui.pdb.create Enable/disable a Pod Disruption Budget creation
  ## @param ui.pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
  ## @param ui.pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable. Defaults to `1` if both `ui.pdb.minAvailable` and `ui.pdb.maxUnavailable` are empty.
  ##
  pdb:
    create: true
    minAvailable: ""
    maxUnavailable: ""
  ## Autoscaling configuration
  ## ref: https://kubernetes.io/docs/concepts/workloads/autoscaling/
  ##
  autoscaling:
    ## @param ui.autoscaling.vpa.enabled Enable VPA for Hubble UI pods
    ## @param ui.autoscaling.vpa.annotations Annotations for VPA resource
    ## @param ui.autoscaling.vpa.controlledResources VPA List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory
    ## @param ui.autoscaling.vpa.maxAllowed VPA Max allowed resources for the pod
    ## @param ui.autoscaling.vpa.minAllowed VPA Min allowed resources for the pod
    ##
    vpa:
      enabled: false
      annotations: {}
      controlledResources: []
      maxAllowed: {}
      minAllowed: {}
      ## @param ui.autoscaling.vpa.updatePolicy.updateMode Autoscaling update policy
      ## Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod
      ## Possible values are "Off", "Initial", "Recreate", and "Auto".
      ##
      updatePolicy:
        updateMode: Auto
    ## @param ui.autoscaling.hpa.enabled Enable HPA for Hubble UI pods
    ## @param ui.autoscaling.hpa.minReplicas Minimum number of replicas
    ## @param ui.autoscaling.hpa.maxReplicas Maximum number of replicas
    ## @param ui.autoscaling.hpa.targetCPU Target CPU utilization percentage
    ## @param ui.autoscaling.hpa.targetMemory Target Memory utilization percentage
    ##
    hpa:
      enabled: false
      minReplicas: ""
      maxReplicas: ""
      targetCPU: ""
      targetMemory: ""
  ## Hubble UI ServiceAccount configuration
  ##
  serviceAccount:
    ## @param ui.serviceAccount.create Specifies whether a ServiceAccount should be created for Hubble UI
    ##
    create: true
    ## @param ui.serviceAccount.name The name of the ServiceAccount to use for Hubble UI
    ## If not set and create is true, a name is generated using the hubble.ui.fullname template
    ##
    name: ""
    ## @param ui.serviceAccount.annotations Additional Service Account annotations (evaluated as a template)
    ##
    annotations: {}
    ## @param ui.serviceAccount.automountServiceAccountToken Automount service account token for the server service account
    ##
    automountServiceAccountToken: true

  ## @section Hubble UI Traffic Exposure Parameters
  ## Hubble UI service parameters
  ##
  service:
    ## @param ui.service.type Hubble UI service type
    ##
    type: LoadBalancer
    ## @param ui.service.ports.http Hubble UI service HTTP port
    ##
    ports:
      http: 80
    ## Node ports to expose
    ## @param ui.service.nodePorts.http Node port for HTTP
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
    ## @param ui.service.clusterIP Hubble UI service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param ui.service.loadBalancerIP Hubble UI service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param ui.service.loadBalancerSourceRanges Hubble UI service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param ui.service.externalTrafficPolicy Hubble UI service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param ui.service.annotations Additional custom annotations for Hubble UI service
    ##
    annotations: {}
    ## @param ui.service.extraPorts Extra ports to expose in Hubble UI service (normally used with the `sidecars` value)
    ##
    extraPorts: []
    ## @param ui.service.sessionAffinity Control where client requests go, to the same pod or round-robin
    ## Values: ClientIP or None
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
    ##
    sessionAffinity: None
    ## @param ui.service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   clientIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}
  ## Hubble UI ingress parameters
  ## ref: http://kubernetes.io/docs/concepts/services-networking/ingress/
  ##
  ingress:
    ## @param ui.ingress.enabled Enable ingress record generation for Hubble UI
    ##
    enabled: false
    ## @param ui.ingress.pathType Ingress path type
    ##
    pathType: ImplementationSpecific
    ## @param ui.ingress.hostname Default host for the ingress record
    ##
    hostname: hubble.local
    ## @param ui.ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
    ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
    ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
    ##
    ingressClassName: ""
    ## @param ui.ingress.path Default path for the ingress record
    ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
    ##
    path: /
    ## @param ui.ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
    ## Use this parameter to set the required annotations for cert-manager, see
    ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
    ## e.g:
    ## annotations:
    ##   kubernetes.io/ingress.class: nginx
    ##   cert-manager.io/cluster-issuer: cluster-issuer-name
    ##
    annotations: {}
    ## @param ui.ingress.tls Enable TLS configuration for the host defined at `ui.ingress.hostname` parameter
    ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ui.ingress.hostname }}`
    ## You can:
    ##   - Use the `ui.ingress.secrets` parameter to create this TLS secret
    ##   - Rely on cert-manager to create it by setting the corresponding annotations
    ##   - Rely on Helm to create self-signed certificates by setting `ui.ingress.selfSigned=true`
    ##
    tls: false
    ## @param ui.ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
    ##
    selfSigned: false
    ## @param ui.ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
    ## e.g:
    ## extraHosts:
    ##   - name: hubble.local
    ##     path: /
    ##
    extraHosts: []
    ## @param ui.ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
    ## e.g:
    ## extraPaths:
    ## - path: /*
    ##   backend:
    ##     serviceName: ssl-redirect
    ##     servicePort: use-annotation
    ##
    extraPaths: []
    ## @param ui.ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
    ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
    ## e.g:
    ## extraTls:
    ## - hosts:
    ##     - hubble.local
    ##   secretName: hubble.local-tls
    ##
    extraTls: []
    ## @param ui.ingress.secrets Custom TLS certificates as secrets
    ## NOTE: 'key' and 'certificate' are expected in PEM format
    ## NOTE: 'name' should line up with a 'secretName' set further up
    ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
    ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
    ## It is also possible to create and manage the certificates outside of this helm chart
    ## Please see README.md for more information
    ## e.g:
    ## secrets:
    ##   - name: hubble.local-tls
    ##     key: |-
    ##       -----BEGIN RSA PRIVATE KEY-----
    ##       ...
    ##       -----END RSA PRIVATE KEY-----
    ##     certificate: |-
    ##       -----BEGIN CERTIFICATE-----
    ##       ...
    ##       -----END CERTIFICATE-----
    ##
    secrets: []
    ## @param ui.ingress.extraRules Additional rules to be covered with this ingress record
    ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
    ## e.g:
    ## extraRules:
    ## - host: example.local
    ##     http:
    ##       path: /
    ##       backend:
    ##         service:
    ##           name: example-svc
    ##           port:
    ##             name: http
    ##
    extraRules: []
  ## Network Policies
  ## Ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
  ##
  networkPolicy:
    ## @param ui.networkPolicy.enabled Specifies whether a NetworkPolicy should be created for Hubble UI
    ##
    enabled: true
    ## @param ui.networkPolicy.allowExternal Don't require server label for connections
    ## The Policy model to apply. When set to false, only pods with the correct
    ## server label will have network access to the ports server is listening
    ## on. When true, server will accept connections from any source
    ## (with the correct destination port).
    ##
    allowExternal: true
    ## @param ui.networkPolicy.allowExternalEgress Allow the pod to access any range of port and all destinations.
    ##
    allowExternalEgress: true
    ## @param ui.networkPolicy.extraIngress [array] Add extra ingress rules to the NetworkPolicy
    ## e.g:
    ## extraIngress:
    ##   - ports:
    ##       - port: 1234
    ##     from:
    ##       - podSelector:
    ##           - matchLabels:
    ##               - role: frontend
    ##       - podSelector:
    ##           - matchExpressions:
    ##               - key: role
    ##                 operator: In
    ##                 values:
    ##                   - frontend
    extraIngress: []
    ## @param ui.networkPolicy.extraEgress [array] Add extra ingress rules to the NetworkPolicy (ignored if allowExternalEgress=true)
    ## e.g:
    ## extraEgress:
    ##   - ports:
    ##       - port: 1234
    ##     to:
    ##       - podSelector:
    ##           - matchLabels:
    ##               - role: frontend
    ##       - podSelector:
    ##           - matchExpressions:
    ##               - key: role
    ##                 operator: In
    ##                 values:
    ##                   - frontend
    ##
    extraEgress: []
    ## @param ui.networkPolicy.ingressNSMatchLabels [object] Labels to match to allow traffic from other namespaces
    ## @param ui.networkPolicy.ingressNSPodMatchLabels [object] Pod labels to match to allow traffic from other namespaces
    ##
    ingressNSMatchLabels: {}
    ingressNSPodMatchLabels: {}
    
## @section Other Parameters
##

## RBAC configuration
##
rbac:
  ## @param rbac.create Specifies whether RBAC resources should be created
  ##
  create: true
  ## @param rbac.rules Custom RBAC rules to set
  ## e.g:
  ## rules:
  ##   - apiGroups:
  ##       - ""
  ##     resources:
  ##       - pods
  ##     verbs:
  ##       - get
  ##       - list
  ##
  rules: []

## @section Hubble Server peers parameters
##
serverPeers:
  ## @param serverPeers.host Hubble Server peers host to connect to
  ##
  host: ""
  ## @param serverPeers.port Hubble Server peers port
  ##
  port: 4244
  ## TLS configuration
  ## @param serverPeers.tls.enabled Enable TLS communication between Hubble Relay and Hubble Server peers
  ## @param serverPeers.tls.ca CA certificate for Hubble Server peers TLS certificates. Ignored if `serverPeers.tls.existingSecret` is set
  ## @param serverPeers.tls.cert Hubble Server peers TLS certificate. Ignored if `serverPeers.tls.existingSecret` is set
  ## @param serverPeers.tls.key Hubble Server peers TLS key. Ignored if `serverPeers.tls.existingSecret` is set
  ## @param serverPeers.tls.existingSecret The name of an existing Secret containing the Hubble Server peers TLS certificates
  ##
  tls:
    enabled: false
    ca: ""
    cert: ""
    key: ""
    existingSecret: ""
