{{- if .Values.networkPolicy.enabled }}
kind: NetworkPolicy
apiVersion: {{ include "common.capabilities.networkPolicy.apiVersion" . }}
metadata:
  name: {{ template "common.names.fullname" . }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
spec:
  podSelector:
    matchLabels:
    {{- include "common.labels.matchLabels" . | nindent 6 }}
  ingress:
    # Allow client connections
    - ports: {{ .Values.service.port }}
      {{- if not .Values.networkPolicy.allowExternal }}
      from:
        - podSelector:
            matchLabels:
              {{ template "common.names.fullname" . }}-client: "true"
          {{- if .Values.networkPolicy.explicitNamespacesSelector }}
          namespaceSelector:
{{ toYaml .Values.networkPolicy.explicitNamespacesSelector | indent 12 }}
          {{- end }}
    # Allow communication inter-broker
        - podSelector:
            matchLabels:
            {{- include "common.labels.matchLabels" . | nindent 14 }}
      {{- end }}
    {{- if .Values.metrics.kafka.enabled }}
    # Allow prometheus scrapes
    - ports:
        - port: {{ .Values.metrics.kafka.service.port }}
    {{- end }}
{{- end }}
