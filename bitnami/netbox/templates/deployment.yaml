apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: netbox
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  name: {{ template "common.names.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  annotations:
    checksum/extraconfig-configmap: {{ include (print $.Template.BasePath "/netbox-cm-extraconfig.yaml") . | sha256sum }}
    checksum/extraconfig-secret: {{ include (print $.Template.BasePath "/netbox-secret-extraconfig.yaml") . | sha256sum }}
    checksum/env-configmap: {{ include (print $.Template.BasePath "/netbox-cm-envvars.yaml") . | sha256sum }}
    checksum/credential-secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
  {{- if .Values.commonAnnotations }}
  {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  {{- if .Values.updateStrategy }}
  strategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: netbox
  template:
    metadata:
      {{- if .Values.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: netbox
        {{- if .Values.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      automountServiceAccountToken: false
      {{- include "netbox.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if and .Values.volumePermissions.enabled .Values.persistence.media.enabled .Values.persistence.reports.enabled }}
      initContainers:
        {{- if and .Values.volumePermissions.enabled .Values.persistence.media.enabled .Values.persistence.reports.enabled or .Values.initContainer }}
        - name: volume-permissions
          image: {{ include "netbox.volumePermissions.image" . }}
          imagePullPolicy: {{ .Values.volumePermissions.image.pullPolicy | quote }}
          command:
            - %%commands%%
          securityContext:
            runAsUser: 0
          {{- if .Values.volumePermissions.resources }}
          resources: {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- if .Values.persistence.media.enabled }}
            - name: media-data
              mountPath: {{ .Values.persistence.media.mountPath }}
              subPath: {{ .Values.persistence.media.subPath }}
            {{- end }}
            {{- if .Values.persistence.reports.enabled }}
            - name: report-data
              mountPath: {{ .Values.persistence.reports.mountPath }}
              subPath: {{ .Values.persistence.reports.subPath }}
            {{- end }}  
        {{- end }}
        {{- if .Values.initContainers }}
          {{- include "common.tplvalues.render" (dict "value" .Values.initContainers "context" $) | nindent 8 }}
        {{- end }}
      {{- end }}  
      containers:
        - name: netbox
          image: {{ template "netbox.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            {{- if .Values.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ template "common.names.fullname" . }}-envvars
            {{- if .Values.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.livenessProbe "enabled") "context" $) | nindent 12 }}
          {{- else if .Values.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customLivenessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.readinessProbe "enabled") "context" $) | nindent 12 }}
          {{- else if .Values.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customReadinessProbe "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- if .Values.persistence.media.enabled }}
            - name: media-data
              mountPath: {{ .Values.persistence.media.mountPath }}
              subPath: {{ .Values.persistence.media.subPath }}
            {{- end }}
            {{- if .Values.persistence.reports.enabled }}
            - name: report-data
              mountPath: {{ .Values.persistence.reports.mountPath }}
              subPath: {{ .Values.persistence.reports.subPath }}
            {{- end }}          
            - name: config-secrets
              mountPath: "/run/secrets/"
              readOnly: true
            - name: extra-config
              mountPath: /etc/netbox/config/extra.py
              subPath: extra.py
              readOnly: true
            - name: extra-config-secrets
              mountPath: /etc/netbox/config/secret.py
              subPath: secret.py
              readOnly: true
          {{- if .Values.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
        {{- if .Values.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: config-secrets
          secret:
            secretName: {{ template "common.names.fullname" . }}
        - name: extra-config
          configMap:
            name: {{ template "common.names.fullname" . }}-extraconfig
        - name: extra-config-secrets
          secret:
            secretName: {{ template "common.names.fullname" . }}-extraconfig
        {{- if .Values.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
{{- if and .Values.persistence.media.enabled .Values.persistence.media.existingClaim }}
        - name: media-data
          persistentVolumeClaim:
{{- with .Values.persistence.media.existingClaim }}
            claimName: {{ tpl . $ }}
{{- end }}
{{- else if not .Values.persistence.media.enabled }}
        - name: media-data
          emptyDir: {}
{{- end }}
{{- if and .Values.persistence.reports.enabled .Values.persistence.reports.existingClaim }}
        - name: report-data
          persistentVolumeClaim:
{{- with .Values.persistence.reports.existingClaim }}
            claimName: {{ tpl . $ }}
{{- end }}
{{- else if not .Values.persistence.reports.enabled }}
        - name: report-data
          emptyDir: {}
{{- end }}
{{- if or (and .Values.persistence.media.enabled (not .Values.persistence.media.existingClaim)) (and .Values.persistence.reports.enabled (not .Values.persistence.reports.existingClaim)) }}
  volumeClaimTemplates:
{{- if and .Values.persistence.media.enabled (not .Values.persistence.media.existingClaim) }}
    - metadata:
        name: media-data
      {{- with .Values.persistence.media.annotations }}
        annotations:
        {{- range $key, $value := . }}
          {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistence.media.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.media.size | quote }}
        {{ include "common.storage.class" (dict "persistence" .Values.persistence.media "global" .Values.global) }}
        {{- if .Values.persistence.media.selector }}
        selector: {{- include "common.tplvalues.render" (dict "value" .Values.persistence.media.selector "context" $) | nindent 10 }}
        {{- end -}}
{{- end }}
{{- if and .Values.persistence.reports.enabled (not .Values.persistence.reports.existingClaim) }}
    - metadata:
        name: report-data
      {{- with .Values.persistence.reports.annotations }}
        annotations:
        {{- range $key, $value := . }}
          {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistence.reports.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.reports.size | quote }}
        {{ include "common.storage.class" (dict "persistence" .Values.persistence.reports "global" .Values.global) }}
        {{- if .Values.persistence.reports.selector }}
        selector: {{- include "common.tplvalues.render" (dict "value" .Values.persistence.reports.selector "context" $) | nindent 10 }}
        {{- end -}}
{{- end }}
{{- end }}
