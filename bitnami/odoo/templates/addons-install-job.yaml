{{- /*
  Copyright VMware, Inc.
  SPDX-License-Identifier: APACHE-2.0
*/}}

{{- if .Values.upgradeJob.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "common.names.fullname" . }}-addons-install
  namespace: {{ .Release.Namespace | quote }}
  labels: 
    {{- include "common.labels.standard" (dict "customLabels" .Values.commonLabels "context" $) | nindent 4 }}
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-1"
spec:
  template:
    spec:
      {{- include "odoo.imagePullSecrets" . | nindent 6 }}
      containers:
        - name: odoo-addons-install
          image: {{ template "odoo.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if .Values.upgradeJob.command }}
          command: 
            {{- include "common.tplvalues.render" (dict "value" .Values.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.upgradeJob.args }}
          args: 
            {{- include "common.tplvalues.render" (dict "value" .Values.upgradeJob.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            - name: BITNAMI_DEBUG
              value: {{ ternary "true" "false" .Values.upgradeJob.debug | quote }}
            - name: ALLOW_EMPTY_PASSWORD
              value: {{ ternary "yes" "no" .Values.allowEmptyPassword | quote }}
            - name: ODOO_DATABASE_HOST
              value: {{ template "odoo.databaseHost" . }}
            - name: ODOO_DATABASE_PORT_NUMBER
              value: {{ template "odoo.databasePort" . }}
            - name: ODOO_DATABASE_NAME
              value: {{ template "odoo.databaseName" . }}
            - name: ODOO_DATABASE_USER
              value: {{ template "odoo.databaseUser" . }}
            - name: ODOO_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "odoo.databaseSecretName" . }}
                  key: {{ include "odoo.databaseSecretPasswordKey" . }}
            - name: ODOO_EMAIL
              value: {{ .Values.odooEmail | quote }}
            - name: ODOO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "odoo.secretName" . }}
                  key: odoo-password
            - name: ODOO_SKIP_BOOTSTRAP
              value: {{ ternary "yes" "no" .Values.odooSkipInstall | quote }}
            - name: ODOO_SKIP_MODULES_UPDATE
              value: {{ ternary "yes" "no" .Values.upgradeJob.odooSkipModulesUpdate | quote }}
            - name: ODOO_LOAD_DEMO_DATA
              value: {{ ternary "yes" "no" .Values.loadDemoData | quote }}
            - name: WITHOUT_DEMO
              value: {{ default "" .Values.withoutDemo | quote }}
            - name: ODOO_SMTP_HOST
              value: {{ default "" .Values.smtpHost | quote }}
            - name: ODOO_SMTP_PORT_NUMBER
              value: {{ default "" .Values.smtpPort | quote }}
            - name: ODOO_SMTP_USER
              value: {{ default "" .Values.smtpUser | quote }}
            - name: ODOO_SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "odoo.smtpSecretName" . }}
                  key: smtp-password
            - name: ODOO_SMTP_PROTOCOL
              value: {{ default "" .Values.smtpProtocol | quote }}
            {{- if .Values.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- if .Values.resources }}
          resources: 
            {{- toYaml .Values.resources | nindent 14 }}
          {{- else if ne .Values.resourcesPreset "none" }}
          resources: 
            {{- include "common.resources.preset" (dict "type" .Values.resourcesPreset) | nindent 14 }}
          {{- end }}
          volumeMounts:
            - name: odoo-data
              mountPath: /bitnami/odoo
      restartPolicy: Never
      volumes:
        - name: odoo-data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ (tpl .Values.persistence.existingClaim $) | default (include "common.names.fullname" .) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
      backoffLimit: 1
{{- end }}
