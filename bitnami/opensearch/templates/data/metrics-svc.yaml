{{- /*
Copyright Broadcom, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/}}

{{- if and ( include "opensearch.data.enabled" . ) .Values.data.metrics.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ printf "%s-metrics" (include "opensearch.data.fullname" .) | trunc 63 | trimSuffix "-" }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/part-of: opensearch
    app.kubernetes.io/component: data
  {{- $defaultAnnotations := dict "prometheus.io/scrape" "true" "prometheus.io/port" (.Values.data.metrics.service.port | quote) "prometheus.io/path" "/_prometheus/metrics" }}
  {{- $annotations := include "common.tplvalues.merge" (dict "values" (list $defaultAnnotations .Values.data.metrics.service.annotations .Values.commonAnnotations) "context" .) }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" $annotations "context" $ ) | nindent 4 }}
spec:
  type: {{ .Values.data.metrics.service.type }}
  {{- if and .Values.data.metrics.service.clusterIP (eq .Values.data.metrics.service.type "ClusterIP") }}
  clusterIP: {{ .Values.data.metrics.service.clusterIP }}
  {{- end }}
  {{- if (or (eq .Values.data.metrics.service.type "LoadBalancer") (eq .Values.data.metrics.service.type "NodePort")) }}
  externalTrafficPolicy: {{ .Values.data.metrics.service.externalTrafficPolicy | quote }}
  {{- end }}
  {{- if eq .Values.data.metrics.service.type "LoadBalancer" }}
  loadBalancerSourceRanges: {{ .Values.data.metrics.service.loadBalancerSourceRanges }}
  {{- end }}
  {{- if (and (eq .Values.data.metrics.service.type "LoadBalancer") (not (empty .Values.data.metrics.service.loadBalancerIP))) }}
  loadBalancerIP: {{ .Values.data.metrics.service.loadBalancerIP }}
  {{- end }}
  {{- if .Values.data.metrics.service.sessionAffinity }}
  sessionAffinity: {{ .Values.data.metrics.service.sessionAffinity }}
  {{- end }}
  {{- if .Values.data.metrics.service.sessionAffinityConfig }}
  sessionAffinityConfig: {{- include "common.tplvalues.render" (dict "value" .Values.data.metrics.service.sessionAffinityConfig "context" $) | nindent 4 }}
  {{- end }}
  ports:
    - name:  http-metrics
      targetPort: rest-api
      port: {{ .Values.data.metrics.service.ports.metrics }}
      protocol: TCP
      {{- if (and (or (eq .Values.data.metrics.service.type "NodePort") (eq .Values.data.metrics.service.type "LoadBalancer")) (not (empty (coalesce .Values.data.metrics.service.nodePort .Values.data.metrics.service.nodePorts.metrics)))) }}
      nodePort: {{ .Values.data.metrics.service.nodePorts.metrics }}
      {{- else if eq .Values.data.metrics.service.type "ClusterIP" }}
      nodePort: null
      {{- end }}
  {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.data.podLabels .Values.commonLabels ) "context" . ) }}
  selector: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: data
{{- end }}
