## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry:
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass:

## @section PostgreSQL Image parameters

## Bitnami PostgreSQL image version
## ref: https://hub.docker.com/r/bitnami/postgresql/tags/
## @param image.registry PostgreSQL image registry
## @param image.repository PostgreSQL image repository
## @param image.tag PostgreSQL image tag (immutable tags are recommended)
## @param image.pullPolicy PostgreSQL image pull policy
## @param image.pullSecrets PostgreSQL image pull secrets
## @param image.debug Enable image debug mode
##
image:
  registry: docker.io
  repository: bitnami/postgresql
  tag: 13.3.0-debian-10-r46
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []
  ## Enable debug mode
  ##
  debug: false

## @section Common parameters

## @param kubeVersion Override Kubernetes version
##
kubeVersion:
## @param nameOverride String to partially override common.names.fullname
##
nameOverride:
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride:
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []
## @param architecture PostgreSQL architecture. Allowed values: standalone or replication
##
architecture: standalone

## @section Authentication configuration

## PostgreSQL Authentication configuration
##
auth:
  ## @param auth.rootPassword PostgreSQL admin password 
  ## NOTE: used when `auth.username` is not `postgres`
  ## ref: https://github.com/bitnami/bitnami-docker-postgresql#setting-the-root-password-on-first-run
  ##
  rootPassword: ""
  ## @param auth.database PostgreSQL custom database
  ## ref: https://github.com/bitnami/bitnami-docker-postgresql/blob/master/README.md#creating-a-database-user-on-first-run
  ##
  database: ""
  ## @param auth.username PostgreSQL custom user
  ## NOTE: has superuser privileges if `auth.username` is `postgres`
  ## ref: https://github.com/bitnami/bitnami-docker-postgresql/blob/master/README.md#creating-a-database-on-first-run
  ##
  username: postgres
  ## @param auth.password PostgreSQL password
  ## Defaults to a random 10-character alphanumeric string if not set
  ##
  password: ""
  ## @param auth.replicationUser PostgreSQL replication user
  ## ref: https://github.com/bitnami/bitnami-docker-postgresql#setting-up-a-streaming-replication
  ##
  replicationUser: repl_user
  ## @param auth.replicationPassword PostgreSQL replication password
  ##
  replicationPassword: repl_password
  ## @param auth.existingSecret Existing secret with PostgreSQL credentials
  ## NOTE: When it's set the previous parameters are ignored.
  ##
  existingSecret:
  ## @param auth.forcePassword Force users to specify required passwords
  ##
  forcePassword: false
  ## @param auth.usePasswordFiles Mount credentials as files instead of using an environment variable
  ##
  usePasswordFiles: false

## @section Primary configuration parameters

## PostgreSQL Primary parameters
##
primary:
  ## Configure current cluster's primary server to be the standby server in other cluster.
  ## This will allow cross cluster replication and provide cross cluster high availability.
  ## You will need to configure pgHbaConfiguration if you want to enable this feature with local cluster replication enabled.
  ## @param primary.primaryAsStandBy.enabled Whether to enable current cluster's primary as standby server of another cluster or not.
  ## @param primary.primaryAsStandBy.primaryHost The Host of replication primary in the other cluster.
  ## @param primary.primaryAsStandBy.primaryPort The Port of replication primary in the other cluster.
  ##
  primaryAsStandBy:
    enabled: false
    primaryHost:
    primaryPort:
  ## @param primary.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param primary.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param primary.hostAliases Deployment pod host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param primary.updateStrategy.type PostgreSQL primary statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param primary.podAffinityPreset PostgreSQL Primary pod affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ## Allowed values: soft, hard
  ##
  podAffinityPreset: ""
  ## @param primary.podAntiAffinityPreset PostgreSQL Primary pod anti-affinity preset
  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ## Allowed values: soft, hard
  ##
  podAntiAffinityPreset: soft
  ## PostgreSQL Primary node affinity preset
  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ## Allowed values: soft, hard
  ##
  nodeAffinityPreset:
    ## @param primary.nodeAffinityPreset.type Node affinity type
    ## Allowed values: soft, hard
    ##
    type: ""
    ## @param primary.nodeAffinityPreset.key Node label key to match
    ## E.g.
    ## key: "kubernetes.io/e2e-az-name"
    ##
    key: ""
    ## @param primary.nodeAffinityPreset.values Node label values to match
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param primary.affinity Affinity for PostgreSQL primary pods assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
  ##
  affinity: {}
  ## @param primary.nodeSelector Node labels for PostgreSQL primary pods assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param primary.tolerations Tolerations for PostgreSQL primary pods assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param primary.labels Provide any additional labels which may be required. 
  ## NOTE: This can be used tohave external-dns show up in `kubectl cluster-info`
  ##  kubernetes.io/cluster-service: "true"
  ##  kubernetes.io/name: "external-dns"
  ##
  labels: {}
  ## @param primary.annotations Job annotations for PostgreSQL primary pods assignment
  ##
  annotations: {}
  ## @param primary.podLabels Pod extra labels for PostgreSQL primary pods assignment
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param primary.podAnnotations Annotations for PostgreSQL primary pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param primary.priorityClassName Priority class for PostgreSQL primary pods assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
  ##
  priorityClassName: ""
  ## PostgreSQL primary Pod security context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param primary.securityContext.enabled Enabled PostgreSQL primary containers' Security Context
  ## @param primary.securityContext.fsGroup Set PostgreSQL primary containers' Security Context runAsUser  
  ##
  securityContext:
    enabled: true
    fsGroup: 1001
  ## PostgreSQL primary container security context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param primary.containerSecurityContext.enabled Enabled PostgreSQL primary containers' Security Context
  ## @param primary.containerSecurityContext.runAsUser Set PostgreSQL primary containers' Security Context runAsUser  
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
  ## @param primary.schedulerName Alternate scheduler for PostgreSQL primary pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName:
  ## PostgreSQL primary container's resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param primary.resources.limits The resources limits for the PostgreSQL primary containers
  ## @param primary.resources.requests The requested resources for the PostgreSQL primary containers
  ##
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits: {}
    requests: {}
  ## PostgreSQL primary container's startup, liveness, and readiness probes
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param primary.startupProbe.enabled Enable startupProbe on PostgreSQL primary nodes
  ## @param primary.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param primary.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param primary.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param primary.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param primary.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 30
    periodSeconds: 15
    timeoutSeconds: 5
    failureThreshold: 10
    successThreshold: 1
  ## @param primary.livenessProbe.enabled Enable livenessProbe on PostgreSQL primary nodes
  ## @param primary.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param primary.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param primary.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param primary.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param primary.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param primary.readinessProbe.enabled Enable readinessProbe on PostgreSQL primary nodes
  ## @param primary.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param primary.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param primary.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param primary.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param primary.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param primary.customStartupProbe PostgreSQL primary custom startup probe
  ##
  customStartupProbe: {}
  ## @param primary.customLivenessProbe PostgreSQL primary custom liveness probe
  ##
  customLivenessProbe: {}
  ## @param primary.customReadinessProbe PostgreSQL primary custom rediness probe
  ##
  customReadinessProbe: {}
  ## @param primary.extraEnvVars An array to add extra environment variables on PostgreSQL primary containers
  ## E.g.
  ## extraEnvVars:
  ##  - name: TZ
  ##    value: "Europe/Paris"
  ##
  extraEnvVars: []
  ## @param primary.extraEnvVarsCM ConfigMap with extra env vars for PostgreSQL primary containers:
  ##
  extraEnvVarsCM: ""
  ## @param primary.extraEnvVarsSecret Secret with extra env vars for PostgreSQL primary containers:
  ##
  extraEnvVarsSecret: ""
  ## @param primary.extraVolumes Extra volumes to add to the PostgreSQL Primary pod(s)
  ##
  extraVolumes: []
  ## @param primary.extraVolumeMounts Extra volume mounts to add to the PostgreSQL Primary container(s)
  ##
  extraVolumeMounts: []
  ## @param primary.initContainers Extra init containers to add to the PostgreSQL Primary pod(s)
  ##
  initContainers: []
  ## @param primary.sidecars Extra sidecar containers to add to the PostgreSQL Primary pod(s)
  ##
  sidecars: []
  ## PostgreSQL data Persistent Volume Storage Class
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    ## @param primary.persistence.enabled Enable persistence on PostgreSQL primary nodes using Persistent Volume Claims
    ##
    enabled: true
    ## @param primary.persistence.mountPath The path the volume will be mounted at on PostgreSQL primary containers
    ## NOTE: Useful when using different PostgreSQL images
    ##
    mountPath: /bitnami/postgresql
    ## @param primary.persistence.subPath The subdirectory of the volume to mount on PostgreSQL primary containers
    ## NOTE: Useful in dev environments
    ##
    subPath: ''
    ## @param primary.persistence.storageClass Persistent Volume storage class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    storageClass:
    ## @param primary.persistence.accessModes [array] Persistent Volume Access Mode
    ##
    accessModes:
      - ReadWriteOnce
    ## @param primary.persistence.size Persistent Volume size
    ##
    size: 8Gi
    ## @param primary.persistence.annotations Persistent Volume Claim annotations
    ##
    annotations: {}
    ## @param primary.persistence.selector Additional labels to match for the PVC
    ## selector:
    ##   matchLabels:
    ##     app: my-app
    selector: {}
    ## @param primary.persistence.existingClaim Use a existing PVC which must be created manually before bound
    ## NOTE: requires primary.persistence.enabled: true
    ##
    existingClaim:
  ## Override the service configuration for primary
  ##
  service:
    ## @param primary.service.type PostgreSQL primary service type
    ##
    type: ClusterIP
    ## @param primary.service.port PostgreSQL primary service port
    ##
    port: 5432
    ## @param primary.service.nodePort Node port for PostgreSQL primary
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    ## NOTE: choose port between <30000-32767>
    ##
    nodePort:
    ## @param primary.service.externalTrafficPolicy PostgreSQL primary service external traffic policy
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param primary.service.clusterIP PostgreSQL primary service Cluster IP
    ##
    clusterIP:
    ## @param primary.service.loadBalancerIP PostgreSQL primary service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
    ##
    loadBalancerIP:
    ## @param primary.service.loadBalancerSourceRanges PostgreSQL primary service Load Balancer sources
    ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g.
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param primary.service.annotations Additional custom annotations for PostgreSQL primary service
    ##
    annotations: {}
  ## PostgreSQL primary Pod Disruption Budget configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  pdb:
    ## @param primary.pdb.enabled Whether to enable Pod Disruption Budget for PostgreSQL primary pods
    ##
    enabled: false
    ## @param primary.pdb.minAvailable Min number of pods that must still be available after the eviction for PostgreSQL primary pods
    ##
    minAvailable: 1
    ## @param primary.pdb.maxUnavailable Max number of pods that can be unavailable after the eviction for PostgreSQL primary pods
    ##
    maxUnavailable:
  ## @param primary.terminationGracePeriodSeconds Integer setting the termination grace period for PostgreSQL primary pods
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods 
  ##
  terminationGracePeriodSeconds: 30

## @section Read-only replicas configuration parameters

## PostgreSQL read only replica parameters
##
readReplicas:
  ## @param readReplicas.replicaCount Number of PostgreSQL replicas to deploy
  ##
  replicaCount: 1
  ## @param readReplicas.synchronousCommit Set synchronous commit mode: on, off, remote_apply, remote_write and local
  ## ref: https://www.postgresql.org/docs/9.6/runtime-config-wal.html#GUC-WAL-LEVEL
  ##
  synchronousCommit: 'off'
  ## @param readReplicas.numSynchronousReplicas From the number of `readReplicas` defined above, set the number of those that will have synchronous replication
  ## NOTE: It cannot be > readReplicas
  numSynchronousReplicas: 0
  ## @param readReplicas.applicationName Replication Cluster application name. Useful for defining multiple replication policies
  ##
  numSynchronousReplicas: 0
  applicationName: my_application
  ## @param readReplicas.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param readReplicas.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param readReplicas.hostAliases Deployment pod host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param readReplicas.updateStrategy.type PostgreSQL replica statefulset strategy type
  ## @skip readReplicas.updateStrategy.rollingUpdate
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param readReplicas.podAffinityPreset PostgreSQL replica pod affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ## Allowed values: soft, hard
  ##
  podAffinityPreset: ""
  ## @param readReplicas.podAntiAffinityPreset PostgreSQL replica pod anti-affinity preset
  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ## Allowed values: soft, hard
  ##
  podAntiAffinityPreset: soft
  ## PostgreSQL replica node affinity preset
  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ## Allowed values: soft, hard
  ##
  nodeAffinityPreset:
    ## @param readReplicas.nodeAffinityPreset.type Node affinity type
    ## Allowed values: soft, hard
    ##
    type: ""
    ## @param readReplicas.nodeAffinityPreset.key Node label key to match
    ## E.g.
    ## key: "kubernetes.io/e2e-az-name"
    ##
    key: ""
    ## @param readReplicas.nodeAffinityPreset.values Node label values to match
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param readReplicas.affinity Affinity for PostgreSQL replica pods assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
  ##
  affinity: {}
  ## @param readReplicas.nodeSelector Node labels for PostgreSQL replica pods assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param readReplicas.tolerations Tolerations for PostgreSQL replica pods assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param readReplicas.labels Provide any additional labels which may be required. 
  ## NOTE: This can be used tohave external-dns show up in `kubectl cluster-info`
  ##  kubernetes.io/cluster-service: "true"
  ##  kubernetes.io/name: "external-dns"
  ##
  labels: {}
  ## @param readReplicas.annotations Job annotations for PostgreSQL replica pods assignment
  ##
  annotations: {}
  ## @param readReplicas.podLabels Pod extra labels for PostgreSQL replica pods assignment
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param readReplicas.podAnnotations Annotations for PostgreSQL replica pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param readReplicas.priorityClassName Priority class for PostgreSQL replica pods assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
  ##
  priorityClassName: ""
  ## PostgreSQL replica Pod security context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param readReplicas.securityContext.enabled Enabled PostgreSQL replica containers' Security Context
  ## @param readReplicas.securityContext.fsGroup Set PostgreSQL replica containers' Security Context runAsUser  
  ##
  securityContext:
    enabled: true
    fsGroup: 1001
  ## PostgreSQL replica container security context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param readReplicas.containerSecurityContext.enabled Enabled PostgreSQL replica containers' Security Context
  ## @param readReplicas.containerSecurityContext.runAsUser Set PostgreSQL replica containers' Security Context runAsUser  
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
  ## @param readReplicas.schedulerName Alternate scheduler for PostgreSQL replica pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName:
  ## PostgreSQL replica container's resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param readReplicas.resources.limits The resources limits for the PostgreSQL replica containers
  ## @param readReplicas.resources.requests The requested resources for the PostgreSQL replica containers
  ##
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits: {}
    requests: {}
  ## PostgreSQL replica container's startup, liveness, and readiness probes
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param readReplicas.startupProbe.enabled Enable startupProbe on PostgreSQL replica nodes
  ## @param readReplicas.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param readReplicas.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param readReplicas.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param readReplicas.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param readReplicas.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 30
    periodSeconds: 15
    timeoutSeconds: 5
    failureThreshold: 10
    successThreshold: 1
  ## @param readReplicas.livenessProbe.enabled Enable livenessProbe on PostgreSQL replica nodes
  ## @param readReplicas.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param readReplicas.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param readReplicas.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param readReplicas.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param readReplicas.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param readReplicas.readinessProbe.enabled Enable readinessProbe on PostgreSQL replica nodes
  ## @param readReplicas.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param readReplicas.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param readReplicas.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param readReplicas.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param readReplicas.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param readReplicas.customStartupProbe PostgreSQL replica custom startup probe
  ##
  customStartupProbe: {}
  ## @param readReplicas.customLivenessProbe PostgreSQL replica custom liveness probe
  ##
  customLivenessProbe: {}
  ## @param readReplicas.customReadinessProbe PostgreSQL replica custom rediness probe
  ##
  customReadinessProbe: {}
  ## @param readReplicas.extraEnvVars An array to add extra environment variables on PostgreSQL replica containers
  ## E.g.
  ## extraEnvVars:
  ##  - name: TZ
  ##    value: "Europe/Paris"
  ##
  extraEnvVars: []
  ## @param readReplicas.extraEnvVarsCM ConfigMap with extra env vars for PostgreSQL replica containers:
  ##
  extraEnvVarsCM: ""
  ## @param readReplicas.extraEnvVarsSecret Secret with extra env vars for PostgreSQL replica containers:
  ##
  extraEnvVarsSecret: ""
  ## @param readReplicas.extraVolumes Extra volumes to add to the PostgreSQL replica pod(s)
  ##
  extraVolumes: []
  ## @param readReplicas.extraVolumeMounts Extra volume mounts to add to the PostgreSQL replica container(s)
  ##
  extraVolumeMounts: []
  ## @param readReplicas.initContainers Extra init containers to add to the PostgreSQL replica pod(s)
  ##
  initContainers: []
  ## @param readReplicas.sidecars Extra sidecar containers to add to the PostgreSQL replica pod(s)
  ##
  sidecars: []
  ## PostgreSQL data Persistent Volume Storage Class
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    ## @param readReplicas.persistence.enabled Enable persistence on PostgreSQL replica nodes using Persistent Volume Claims
    ##
    enabled: true
    ## @param readReplicas.persistence.mountPath The path the volume will be mounted at on PostgreSQL replica containers
    ## NOTE: Useful when using different PostgreSQL images
    ##
    mountPath: /bitnami/postgresql
    ## @param readReplicas.persistence.subPath The subdirectory of the volume to mount on PostgreSQL replica containers
    ## NOTE: Useful in dev environments
    ##
    subPath: ''
    ## @param readReplicas.persistence.storageClass Persistent Volume storage class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    storageClass:
    ## @param readReplicas.persistence.accessModes [array] Persistent Volume Access Mode
    ##
    accessModes:
      - ReadWriteOnce
    ## @param readReplicas.persistence.size Persistent Volume size
    ##
    size: 8Gi
    ## @param readReplicas.persistence.annotations Persistent Volume Claim annotations
    ##
    annotations: {}
    ## @param readReplicas.persistence.selector Additional labels to match for the PVC
    ## selector:
    ##   matchLabels:
    ##     app: my-app
    selector: {}
    ## @param readReplicas.persistence.existingClaim Use a existing PVC which must be created manually before bound
    ## NOTE: requires readReplicas.persistence.enabled: true
    ##
    existingClaim:
  ## Override the service configuration for replica
  ##
  service:
    ## @param readReplicas.service.type PostgreSQL replica service type
    ##
    type: ClusterIP
    ## @param readReplicas.service.port PostgreSQL replica service port
    ##
    port: 5432
    ## @param readReplicas.service.nodePort Node port for PostgreSQL replica
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    ## NOTE: choose port between <30000-32767>
    ##
    nodePort:
    ## @param readReplicas.service.externalTrafficPolicy PostgreSQL replica service external traffic policy
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param readReplicas.service.clusterIP PostgreSQL replica service Cluster IP
    ##
    clusterIP:
    ## @param readReplicas.service.loadBalancerIP PostgreSQL replica service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
    ##
    loadBalancerIP:
    ## @param readReplicas.service.loadBalancerSourceRanges PostgreSQL replica service Load Balancer sources
    ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g.
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param readReplicas.service.annotations Additional custom annotations for PostgreSQL replica service
    ##
    annotations: {}
  ## PostgreSQL replica Pod Disruption Budget configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  pdb:
    ## @param readReplicas.pdb.enabled Whether to enable Pod Disruption Budget for PostgreSQL replica pods
    ##
    enabled: false
    ## @param readReplicas.pdb.minAvailable Min number of pods that must still be available after the eviction for PostgreSQL replica pods
    ##
    minAvailable: 1
    ## @param readReplicas.pdb.maxUnavailable Max number of pods that can be unavailable after the eviction for PostgreSQL replica pods
    ##
    maxUnavailable:
  ## @param readReplicas.terminationGracePeriodSeconds Integer setting the termination grace period for PostgreSQL replica pods
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods 
  ##
  terminationGracePeriodSeconds: 30

## @section Common database configuration

## @param postgresqlDataDir PostgreSQL data dir
## ref: https://github.com/bitnami/bitnami-docker-postgresql/blob/master/README.md
##
postgresqlDataDir: /bitnami/postgresql/data
## @param postgresqlInitdbArgs Specify extra initdb args
## ref: https://github.com/bitnami/bitnami-docker-postgresql/blob/master/README.md
##
postgresqlInitdbArgs:
## @param postgresqlInitdbWalDir Specify a custom location for the PostgreSQL transaction log
## ref: https://github.com/bitnami/bitnami-docker-postgresql/blob/master/README.md
##
postgresqlInitdbWalDir:
## @param postgresqlConfiguration PostgreSQL configuration
## Specify runtime configuration parameters as a dict, using camelCase, e.g.
## {"sharedBuffers": "500MB"}
## Alternatively, you can put your postgresql.conf under the files/ directory
## ref: https://www.postgresql.org/docs/current/static/runtime-config.html
##
postgresqlConfiguration:
## @param postgresqlExtendedConf PostgreSQL extended configuration
## As above, but _appended_ to the main configuration
## Alternatively, you can put your *.conf under the files/conf.d/ directory
## https://github.com/bitnami/bitnami-docker-postgresql#allow-settings-to-be-loaded-from-files-other-than-the-default-postgresqlconf
##
postgresqlExtendedConf:
## @param pgHbaConfiguration PostgreSQL client authentication configuration
## Specify content for pg_hba.conf
## Default: do not create pg_hba.conf
## Alternatively, you can put your pg_hba.conf under the files/ directory
pgHbaConfiguration: []
## E.g.
## pgHbaConfiguration: |-
##   local all all trust
##   host all all localhost trust
##   host mydatabase mysuser 192.168.0.0/24 md5
## @param configurationConfigMap ConfigMap with PostgreSQL configuration
## NOTE: This will override postgresqlConfiguration and pgHbaConfiguration
configurationConfigMap:
## @param extendedConfConfigMap ConfigMap with PostgreSQL extended configuration
extendedConfConfigMap:
## @param initdbScripts initdb scripts
## Specify dictionary of scripts to be run at first boot
## Alternatively, you can put your scripts under the files/docker-entrypoint-initdb.d directory
##
initdbScripts: []
## E.g.
## my_init_script.sh: |
##   #!/bin/sh
##   echo "Do something."
## @param initdbScriptsConfigMap ConfigMap with scripts to be run at first boot
## NOTE: This will override initdbScripts
initdbScriptsConfigMap:
## @param initdbScriptsSecret Secret with scripts to be run at first boot (in case it contains sensitive information)
## NOTE: This can work along initdbScripts or initdbScriptsConfigMap
initdbScriptsSecret:
## Specify the PostgreSQL username and password to execute the initdb scripts
## @param initdbUser PostgreSQL username to execute the initdb scripts
## @param initdbPassword PostgreSQL password to execute the initdb scripts
##
initdbUser:
initdbPassword:
## @param postgresqlSharedPreloadLibraries Shared preload libraries
##
postgresqlSharedPreloadLibraries: "pgaudit"
## @param postgresqlMaxConnections Maximum total connections
##
postgresqlMaxConnections:
## @param postgresqlPostgresConnectionLimit Maximum connections for the postgres user
##
postgresqlPostgresConnectionLimit:
## @param postgresqlDbUserConnectionLimit Maximum connections for the created user
##
postgresqlDbUserConnectionLimit:
## @param postgresqlTcpKeepalivesInterval TCP keepalives interval
##
postgresqlTcpKeepalivesInterval:
## @param postgresqlTcpKeepalivesIdle TCP keepalives idle
##
postgresqlTcpKeepalivesIdle:
## @param postgresqlTcpKeepalivesCount TCP keepalives count
##
postgresqlTcpKeepalivesCount:
## @param postgresqlStatementTimeout Statement timeout
##
postgresqlStatementTimeout:
## @param postgresqlPghbaRemoveFilters Remove pg_hba.conf lines with the following comma-separated patterns
## (cannot be used with custom pg_hba.conf)
##
postgresqlPghbaRemoveFilters:

## @section Audit settings

## Audit settings
## https://github.com/bitnami/bitnami-docker-postgresql#auditing
##
audit:
  ## @param audit.logHostname Log client hostnames
  ##
  logHostname: false
  ## @param audit.logConnections Log connections to the server
  ##
  logConnections: false
  ## @param audit.logDisconnections Log disconnections
  ##
  logDisconnections: false
  ## @param audit.pgAuditLog Operation to audit using pgAudit (default if not set)
  ##
  pgAuditLog: ""
  ## @param audit.pgAuditLogCatalog Log catalog using pgAudit
  ##
  pgAuditLogCatalog: "off"
  ## @param audit.clientMinMessages Log level for clients
  ##
  clientMinMessages: error
  ## @param audit.logLinePrefix Template for log line prefix (default if not set)
  ##
  logLinePrefix: ""
  ## @param audit.logTimezone Log timezone
  ##
  logTimezone: ""

## @section LDAP configuration

## LDAP configuration
## @param ldap.enabled Enable LDAP support
## @param ldap.url LDAP URL beginning in the form `ldap[s]://host[:port]/basedn[
## @param ldap.server IP address or name of the LDAP server.
## @param ldap.port Port number on the LDAP server to connect to
## @param ldap.prefix String to prepend to the user name when forming the DN to bind
## @param ldap.suffix String to append to the user name when forming the DN to bind
## @param ldap.baseDN Root DN to begin the search for the user in
## @param ldap.bindDN DN of user to bind to LDAP
## @param ldap.bind_password Password for the user to bind to LDAP
## @param ldap.search_attr Attribute to match against the user name in the search
## @param ldap.search_filter The search filter to use when doing search+bind authentication
## @param ldap.scheme Set to `ldaps` to use LDAPS
## @param ldap.tls Set to `1` to use TLS encryption
##
ldap:
  ## @param ldap.enabled Enables LDAP
  ##
  enabled: false
  ## @param ldap.url LDAP service url
  ##  
  url: ''
  ## @param ldap.server LDAP server
  ##
  server: ''
  ## @param ldap.port LDAP port
  ##
  port: ''
  ## @param ldap.prefix LDAP prefix
  ##
  prefix: ''
  ## @param ldap.suffix LDAP suffix
  ##
  suffix: ''
  ## @param ldap.baseDN LDAP base distinguished name
  ##
  baseDN: ''
  ## @param ldap.bindDN LDAP bind distinguished name
  ##
  bindDN: ''
  ## @param ldap.bind_password LDAP bind password
  ##
  bind_password:
  ## @param ldap.search_attr LDAP search attributes
  ##
  search_attr: ''
  ## @param ldap.search_filter LDAP search filter
  ##
  search_filter: ''
  ## @param ldap.scheme LDAP scheme
  ##
  scheme: ''
  ## @param ldap.tls LDAP TLS configuration
  ##
  tls: {}

## @section Init Container Parameters

## Init containers parameters:
## volumePermissions: Change the owner of the persist volume mountpoint to RunAsUser:fsGroup
##
volumePermissions:
  ## @param volumePermissions.enabled Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`
  ##
  enabled: false
  ## Bitnami Shell image
  ## ref: https://hub.docker.com/r/bitnami/bitnami-shell/tags/
  ## @param volumePermissions.image.registry Bitnami Shell image registry
  ## @param volumePermissions.image.repository Bitnami Shell image repository
  ## @param volumePermissions.image.tag Bitnami Shell image tag (immutable tags are recommended)
  ## @param volumePermissions.image.pullPolicy Bitnami Shell image pull policy
  ## @param volumePermissions.image.pullSecrets Bitnami Shell image pull secrets
  ##
  image:
    registry: docker.io
    repository: bitnami/bitnami-shell
    tag: 10-debian-10-r112
    pullPolicy: Always
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## Init container's resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param volumePermissions.resources.limits The resources limits for the init container
  ## @param volumePermissions.resources.requests The requested resources for the init container
  ##
  resources:
    limits: {}
    requests: {}
  ## Init container Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param volumePermissions.containerSecurityContext.runAsUser Set init container's Security Context runAsUser
  ## NOTE: when runAsUser is set to special value "auto", init container will try to chown the
  ##   data folder to auto-determined user&group, using commands: `id -u`:`id -G | cut -d" " -f2`
  ##   "auto" is especially useful for OpenShift which has scc with dynamic user ids (and 0 is not allowed)
  ##
  containerSecurityContext:
    runAsUser: 0

## @section ServiceAccount configuration

## ServiceAccount configuration
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
##
serviceAccount:
  ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
  ##
  create: true
  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the common.names.fullname template
  ##
  name: ""
  ## @param serviceAccount.automountServiceAccountToken Whether to auto mount the service account token
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server
  ##
  automountServiceAccountToken: true
  ## @param serviceAccount.annotations Additional custom annotations for the ServiceAccount
  ##
  annotations: {}

## @section TLS configuration

## TLS configuration
##
tls:
  ## @param tls.enabled Enable TLS traffic
  ##
  enabled: false
  ## @param tls.autoGenerated Enable autogenerated certificates
  ##
  autoGenerated: false
  ## @param tls.preferServerCiphers Whether to use the server's TLS cipher preferences rather than the client's.
  ##
  preferServerCiphers: true
  ## @param tls.certificatesSecret Name of the Secret that contains the certificates
  ##
  certificatesSecret:
  ## @param tls.certFilename Certificate filename
  ##
  certFilename:
  ## @param tls.certKeyFilename Certificate Key filename
  ##
  certKeyFilename:
  ## @param tls.certCAFilename CA Certificate filename
  ##
  certCAFilename:
  ## @param tls.crlFilename File containing a Certificate Revocation List
  ##
  crlFilename:
  
## @section Other parameters

## PodSecurityPolicy configuration
## ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/
##
podSecurityPolicy:
  ## @param podSecurityPolicy.create Specifies whether a PodSecurityPolicy should be created
  ##
  create: false
## RBAC configuration
##
rbac:
  ## @param rbac.create Specifies whether RBAC resources should be created
  ##
  create: false
  ## @param rbac.rules Custom RBAC rules to set
  ## e.g:
  ## rules:
  ##   - apiGroups:
  ##       - ""
  ##     resources:
  ##       - pods
  ##     verbs:
  ##       - get
  ##       - list
  ##
  rules: []
## shmVolume configuration
## Start primary and read(s) pod(s) without limitations on shm memory.
## By default docker and containerd (and possibly other container runtimes)
## limit `/dev/shm` to `64M` (see e.g. the
## [docker issue](https://github.com/docker-library/postgres/issues/416) and the
## [containerd issue](https://github.com/containerd/containerd/issues/3654),
## which could be not enough if PostgreSQL uses parallel workers heavily.
##
shmVolume:
  ## @param shmVolume.enabled Enable to mount a new tmpfs volume to remove limitations on shm memory.
  ##
  enabled: true
  ## @param shmVolume.chmod.enabled Enable to `chmod 777 /dev/shm` on a initContainer.
  ## NOTE: This option is ignored if `volumePermissions.enabled` is `false`
  ##
  chmod:
    enabled: true
  ## @param shmVolume.sizeLimit Set this to enable a size limit on the shm tmpfs. 
  ## NOTE: the size of the tmpfs counts against container's memory limit
  ##
  sizeLimit:
## Network Policy configuration
## ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
##
networkPolicy:
  ## @param networkPolicy.enabled Enable creation of NetworkPolicy resources
  ##
  enabled: false
  ## @param networkPolicy.allowExternal Don't require client label for connections
  ## When set to false, only pods with the correct client label will have network access to the ports
  ## PostgreSQL is listening on. When true, PostgreSQL will accept connections from any source
  ## (with the correct destination port).
  ##
  allowExternal: true
  ## @param networkPolicy.extraIngress Add extra ingress rules to the NetworkPolicy
  ## e.g:
  ## extraIngress:
  ##   - ports:
  ##       - port: 1234
  ##     from:
  ##       - podSelector:
  ##           - matchLabels:
  ##               - role: frontend
  ##       - podSelector:
  ##           - matchExpressions:
  ##               - key: role
  ##                 operator: In
  ##                 values:
  ##                   - frontend
  ##
  extraIngress: []
  ## @param networkPolicy.ingressNSMatchLabels Labels to match to allow traffic from other namespaces
  ## @param networkPolicy.ingressNSPodMatchLabels Pod labels to match to allow traffic from other namespaces
  ##
  ingressNSMatchLabels: {}
  ingressNSPodMatchLabels: {}

## @section Metrics Parameters

## Configure metrics exporter
##
metrics:
  ## @param metrics.enabled Start a sidecar prometheus exporter to expose PostgreSQL metrics
  ##
  enabled: false
  ## Bitnami PostgreSQL Exporter image
  ## ref: https://hub.docker.com/r/bitnami/postgres-exporter/tags
  ## @param metrics.image.registry PostgreSQL Exporter image registry
  ## @param metrics.image.repository PostgreSQL Exporter image repository
  ## @param metrics.image.tag PostgreSQL PostgreSQL Exporter image tag (immutable tags are recommended)
  ## @param metrics.image.pullPolicy PostgreSQL Exporter image pull policy
  ## @param metrics.image.pullSecrets PostgreSQL Exporter image pull secrets
  ##
  image:
    registry: docker.io
    repository: bitnami/postgres-exporter
    tag: 0.9.0-debian-10-r102
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    pullSecrets: []
  ## PostgreSQL exporter resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param metrics.resources.limits The resources limits for the PostgreSQL exporter container
  ## @param metrics.resources.requests The requested resources for the PostgreSQL exporter container
  ##
  resources:
    limits: {}
    requests: {}
  ## PostgreSQL Sentinel exporter service parameters
  ##
  service:
    ## @param metrics.service.type PostgreSQL Sentinel exporter service type
    ##
    type: ClusterIP
    ## @skip metrics.service.annotations.prometheus.io/scrape
    ## @skip metrics.service.annotations.prometheus.io/port
    ##
    annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port: '9187'
    ## @param metrics.service.loadBalancerIP PostgreSQL Sentinel exporter service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
    ##
    loadBalancerIP:
  ## Prometheus Service Monitor
  ## ref: https://github.com/coreos/prometheus-operator
  ##      https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
  ##
  serviceMonitor:
    ## @param metrics.serviceMonitor.enabled Create ServiceMonitor resource(s) for scraping metrics using PrometheusOperator
    ##
    enabled: false
    ## @param metrics.serviceMonitor.namespace The namespace in which the ServiceMonitor will be created
    ##
    namespace:
    ## @param metrics.serviceMonitor.interval The interval at which metrics should be scraped
    ##
    interval:
    ## @param metrics.serviceMonitor.scrapeTimeout The timeout after which the scrape is ended
    ##
    scrapeTimeout:
    ## @param metrics.serviceMonitor.additionalLabels Additional labels that can be used so ServiceMonitor resource(s) can be discovered by Prometheus
    ##
    additionalLabels: {}
  ## Custom PrometheusRule to be defined
  ## The value is evaluated as a template, so, for example, the value can depend on .Release or .Chart
  ## ref: https://github.com/coreos/prometheus-operator#customresourcedefinitions
  ##
  prometheusRule:
    ## @param metrics.prometheusRule.enabled Create a custom prometheusRule Resource for scraping metrics using PrometheusOperator
    ##
    enabled: false
    ## @param metrics.prometheusRule.namespace The namespace in which the prometheusRule will be created
    ##
    namespace:
    ## @param metrics.prometheusRule.additionalLabels Additional labels for the prometheusRule
    ##
    additionalLabels: {}
    ## @param metrics.prometheusRule.rules Custom Prometheus rules
    ## These are just examples rules, please adapt them to your needs.
    ## Make sure to constraint the rules to the current postgresql service.
    ## rules:
    ##   - alert: HugeReplicationLag
    ##     expr: pg_replication_lag{service="{{ template "common.names.fullname" . }}-metrics"} / 3600 > 1
    ##     for: 1m
    ##     labels:
    ##       severity: critical
    ##     annotations:
    ##       description: replication for {{ template "common.names.fullname" . }} PostgreSQL is lagging by {{ "{{ $value }}" }} hour(s).
    ##       summary: PostgreSQL replication is lagging by {{ "{{ $value }}" }} hour(s).
    ##
    rules: []
  ## Define additional custom metrics
  ## ref: https://github.com/wrouesnel/postgres_exporter#adding-new-metrics-via-a-config-file
  # customMetrics:
  #   pg_database:
  #     query: "SELECT d.datname AS name, CASE WHEN pg_catalog.has_database_privilege(d.datname, 'CONNECT') THEN pg_catalog.pg_database_size(d.datname) ELSE 0 END AS size_bytes FROM pg_catalog.pg_database d where datname not in ('template0', 'template1', 'postgres')"
  #     metrics:
  #       - name:
  #           usage: "LABEL"
  #           description: "Name of the database"
  #       - size_bytes:
  #           usage: "GAUGE"
  #           description: "Size of the database in bytes"
  #
  ## @param metrics.extraEnvVars An array to add extra env vars to configure postgres-exporter
  ## see: https://github.com/wrouesnel/postgres_exporter#environment-variables
  ## For example:
  ##  extraEnvVars:
  ##  - name: PG_EXPORTER_DISABLE_DEFAULT_METRICS
  ##    value: "true"
  ##
  extraEnvVars: {}
  ## Pod Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ## @param metrics.securityContext.enabled Enabled PostgreSQL metrics containers' Security Context
  ## @param metrics.securityContext.runAsUser Set PostgreSQL metrics containers' Security Context runAsUser  
  ##
  securityContext:
    enabled: false
    runAsUser: 1001
  ## Configure extra options for liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
  ## @param metrics.livenessProbe.enabled Enable livenessProbe on PostgreSQL metrics nodes
  ## @param metrics.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param metrics.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param metrics.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param metrics.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param metrics.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param metrics.readinessProbe.enabled Enable readinessProbe on PostgreSQL metrics nodes
  ## @param metrics.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param metrics.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param metrics.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param metrics.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param metrics.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
