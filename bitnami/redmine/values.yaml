## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry:
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass:

## @section Common parameters

## @param kubeVersion Force target Kubernetes version (using Helm capabilities if not set)
##
kubeVersion:
## @param nameOverride String to partially override redmine.fullname template (will maintain the release name)
##
nameOverride:
## @param fullnameOverride String to fully override redmine.fullname template
##
fullnameOverride:
## @param commonLabels Add labels to all the deployed resources
##
commonLabels: {}
## @param commonAnnotations Add annotations to all the deployed resources
##
commonAnnotations: {}
## @param extraDeploy Extra objects to deploy (value evaluated as a template)
##
extraDeploy: []

## @section Redmine parameters

## Bitnami Redmine image version
## ref: https://hub.docker.com/r/bitnami/redmine/tags/
## @param image.registry Redmine image registry
## @param image.repository Redmine image repository
## @param image.tag Redmine image tag (immutable tags are recommended)
## @param image.pullPolicy Image pull policy
## @param image.pullSecrets Image pull secrets
##
image:
  registry: docker.io
  repository: bitnami/redmine
  tag: 4.2.1-debian-10-r48
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []
## @param hostAliases Deployment pod host aliases
## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
##
hostAliases: []
## @param redmineUsername User of the application
## ref: https://github.com/bitnami/bitnami-docker-redmine/#environment-variables
##
redmineUsername: user
## @param redminePassword Application password
## Defaults to a random 10-character alphanumeric string if not set
## ref: https://github.com/bitnami/bitnami-docker-redmine#environment-variables
##
redminePassword:
## @param redmineEmail Admin email
## ref: https://github.com/bitnami/bitnami-docker-redmine/#environment-variables
##
redmineEmail: user@example.com
## @param redmineLanguage Redmine default data language
## ref: https://github.com/bitnami/bitnami-docker-redmine/#environment-variables
##
redmineLanguage: en
## SMTP mail delivery configuration
## ref: https://github.com/bitnami/bitnami-docker-redmine/#smtp-configuration
## @param smtpHost SMTP host
## @param smtpPort SMTP port
## @param smtpUser SMTP user
## @param smtpPassword SMTP password
## @param smtpTls Use TLS encryption with SMTP
##
smtpHost:
smtpPort:
smtpUser:
smtpPassword:
smtpTls:
## @param existingSecret Use existing secret for password details (`redminePassword` and `smtpPassword` will be ignored). Must contain the keys `redmine-password` and `smtp-password`
## This ignores both redminePassword and smtpPassword properties.
existingSecret:
## @param extraEnvVars Extra environment variables to be set on redmine container
## For example:
##  - name: BEARER_AUTH
##    value: true
##
extraEnvVars: []
## @param extraEnvVarsCM Name of existing ConfigMap containing extra environment variables
##
extraEnvVarsCM:
## @param extraEnvVarsSecret Name of existing Secret containing extra environment variables
##
extraEnvVarsSecret:
## @param extraVolumes Optionally specify extra list of additional volumes for redmine container
##
extraVolumes: []
## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for redmine container
##
extraVolumeMounts: []
## @param command Override default container command (useful when using custom images)
##
command: []
## @param args Override default container args (useful when using custom images)
##
args: []

## @section Mailreceiver-CronJob parameters

## Configure CronJob scheduler for receiving emails and converting them to tasks
## ref: http://www.redmine.org/projects/redmine/wiki/RedmineReceivingEmails
##
mailReceiver:
  ## @param mailReceiver.enabled Whether to enable scheduled mail-to-task CronJob
  ##
  enabled: false
  ## @param mailReceiver.schedule Kubernetes CronJob schedule
  ##
  schedule: "*/5 * * * *"
  ## @param mailReceiver.suspend Whether to create suspended CronJob
  ##
  suspend: true
  ## @param mailReceiver.image.registry Mail to Task image registry
  ## @param mailReceiver.image.repository Mail to Task image repository
  ## @param mailReceiver.image.tag Mail to Task image tag
  ## @param mailReceiver.image.pullPolicy Mail to Task image pull policy
  ##
  image:
    registry: docker.io
    repository: bitnami/redmine
    tag: 4.2.1-debian-10-r47
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
  ## @param mailReceiver.podAnnotations Additional pod annotations
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param mailReceiver.podLabels Additional pod labels
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param mailReceiver.priorityClassName Redmine pods' priority.
  ## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
  ##
  priorityClassName: ""
  ## @param mailReceiver.mailProtocol Protocol to use to get emails from configured server
  ## Supported values are "IMAP" or "POP3"
  ##
  mailProtocol: IMAP
  ## @param mailReceiver.host Server hostname to receive emails from
  ##
  host: ""
  ## @param mailReceiver.port TCP port on the `host`
  ##
  port: 993
  ## @param mailReceiver.username Login to authenticate on the `host`
  ##
  username: ""
  ## @param mailReceiver.password Password to authenticate on the `host`
  ##
  password: ""
  ## @param mailReceiver.ssl Whether use SSL/TLS to connect to the `host`
  ## If true then client will use SSL/TLS
  ##
  ssl: true
  ## @param mailReceiver.startTLS Whether use StartTLS to connect to the `host`
  ## SSL flag for redmine mail client
  ## If true then client will use StartTLS
  ##
  startTLS: false
  ## @param mailReceiver.imapFolder IMAP only. Folder to read emails from
  ##
  imapFolder: "INBOX"
  ## @param mailReceiver.moveOnSuccess Folder on mail server to move correctly parsed emails to
  ## If empty - just leave emails as read
  ##
  moveOnSuccess: ""
  ## @param mailReceiver.moveOnFailure IMAP only. Folder on mail server to move emails with parsing errors to
  ## If empty - just leave emails as read
  ##
  moveOnFailure: ""
  ## @param mailReceiver.unknownUserAction Action to perform for unknown email sender
  ## ref: http://www.redmine.org/projects/redmine/wiki/RedmineReceivingEmails
  ##
  unknownUserAction: ignore
  ## @param mailReceiver.noPermissionCheck Whether skip permission check during creating a new task
  ## If set to 1 then redmine does not check task creator (source email) permissions for creating a new task
  ## If set to 0 then task creator must have permission to create a new task
  ##
  noPermissionCheck: 0
  ## @param mailReceiver.noAccountNotice Whether send a just created user (the creator of the task) email about his new account
  ## 0 - send, 1 - not send
  ##
  noAccountNotice: 1
  ## @param mailReceiver.defaultGroup Defines a group list to add created user to
  ## Groups must be enumerated as names separated by comma without spaces
  ##
  defaultGroup: ""
  ## @param mailReceiver.project Defines identifier of the target project for a new task
  ##
  project: ""
  ## @param mailReceiver.projectFromSubaddress Defines email address to select project from subaddress
  ##
  projectFromSubaddress: ""
  ## @param mailReceiver.status Defines a new task status
  ##
  status: ""
  ## @param mailReceiver.tracker Defines a new task tracker
  ##
  tracker: ""
  ## @param mailReceiver.category Defines a new task category
  ##
  category: ""
  ## @param mailReceiver.priority Defines a new task priority
  ##
  priority: ""
  ## @param mailReceiver.assignedTo Defines a new task assignee
  ##
  assignedTo: ""
  ## @param mailReceiver.allowOverride Defines if email content is allowed to set attributes values. Values is a comma separated list of attributes or `all` to allow all attributes
  ##
  allowOverride: ""
  ## @param mailReceiver.extraEnvVars Extra environment variables to be set on mailReceiver container
  ## For example:
  ##  - name: BEARER_AUTH
  ##    value: true
  ##
  extraEnvVars: []
  ## @param mailReceiver.extraEnvVarsCM Name of existing ConfigMap containing extra environment variables
  ##
  extraEnvVarsCM:
  ## @param mailReceiver.extraEnvVarsSecret Name of existing Secret containing extra environment variables
  ##
  extraEnvVarsSecret:
  ## @param mailReceiver.extraVolumes Optionally specify extra list of additional volumes for mailReceiver container
  ##
  extraVolumes: []
  ## @param mailReceiver.extraVolumeMounts Optionally specify extra list of additional volumeMounts for mailReceiver container
  ##
  extraVolumeMounts: []
  ## @param mailReceiver.command Override default container command (useful when using custom images)
  ##
  command: ["bash"]
  ## @param mailReceiver.args Override default container args (useful when using custom images)
  ##
  args: ["-c", "/cj/receive.sh"]
  ## SecurityContext configuration
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ## @param mailReceiver.containerSecurityContext.enabled mailReceiver Container securityContext
  ## @param mailReceiver.containerSecurityContext.runAsUser User ID for the mailReceiver container
  ## @param mailReceiver.containerSecurityContext.runAsNonRoot Set mailReceiver container's Security Context runAsNonRoot
  ##
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  ## @param mailReceiver.podSecurityContext.enabled Enable security context for mailReceiver pods
  ## @param mailReceiver.podSecurityContext.fsGroup Group ID for the volumes of the pod
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  ## @param mailReceiver.initContainers Add init containers to the Redmine pods
  ## Example:
  ## initContainers:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  initContainers: {}
  ## @param mailReceiver.sidecars Add sidecars to the Redmine pods
  ## Example:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}
  ## @param mailReceiver.podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param mailReceiver.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node affinity preset
  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param mailReceiver.nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param mailReceiver.nodeAffinityPreset.key Node label key to match Ignored if `affinity` is set.
    ## E.g.
    ## key: "kubernetes.io/e2e-az-name"
    ##
    key: ""
    ## @param mailReceiver.nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set.
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param mailReceiver.affinity Affinity for pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
  ##
  affinity: {}
  ## @param mailReceiver.nodeSelector Node labels for pod assignment. Evaluated as a template.
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param mailReceiver.tolerations Tolerations for pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

## @section Volume Permissions parameters

## volumePermissions: Change the owner and group of the persistent volume mountpoint to runAsUser:fsGroup values from the securityContext section.
##
volumePermissions:
  ## @param volumePermissions.enabled Enable init container that changes volume permissions in the data directory (for cases where the default k8s `runAsUser` and `fsUser` values do not work)
  ##
  enabled: false
  ## @param volumePermissions.image.registry Init container volume-permissions image registry
  ## @param volumePermissions.image.repository Init container volume-permissions image name
  ## @param volumePermissions.image.tag Init container volume-permissions image tag
  ## @param volumePermissions.image.pullPolicy Init container volume-permissions image pull policy
  ## @param volumePermissions.image.pullSecrets Specify docker-registry secret names as an array
  ##
  image:
    registry: docker.io
    repository: bitnami/bitnami-shell
    tag: 10-debian-10-r112
    pullPolicy: Always
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    pullSecrets: []
    ##   - myRegistryKeySecretName
  ## Init containers' resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param volumePermissions.resources.limits The resources limits for the container
  ## @param volumePermissions.resources.requests The requested resources for the container
  ##
  resources:
    ## Example:
    ## limits:
    ##    cpu: 100m
    ##    memory: 128Mi
    limits: {}
    ## Examples:
    ## requests:
    ##    cpu: 100m
    ##    memory: 128Mi
    requests: {}

## @section Database parameters

## @param databaseType Database type. Allowed values: "mariadb" and "postgresql"
## ref: https://github.com/bitnami/bitnami-docker-redmine#run-the-application-using-postgresql-database
##
databaseType: mariadb
## MariaDB chart configuration
##
## https://github.com/bitnami/charts/blob/master/bitnami/mariadb/values.yaml
##
mariadb:
  ## @param mariadb.enabled Whether to deploy a MariaDB server to satisfy the database requirements
  ## To use an external database set this to false and configure the externalDatabase parameters
  ##
  enabled: true
  ## @param mariadb.replication.enabled Enable/Disable MariaDB replication
  ##
  replication:
    enabled: false
  ## @param mariadb.existingSecret Use existing secret (ignores root, auth and replication passwords)
  ##
  existingSecret:
  ## Create a database and a database user
  ## ref: https://github.com/bitnami/bitnami-docker-mariadb/blob/master/README.md#creating-a-database-user-on-first-run
  ##
  auth:
    ## @param mariadb.auth.database MariaDB custom database
    ##
    database: bitnami_redmine
    ## @param mariadb.auth.username MariaDB custom user
    ##
    username: bn_redmine
    ## @param mariadb.auth.password If the password is not specified, mariadb will generate a random password
    ##
    password: ""
    ## @param mariadb.auth.rootPassword MariaDB admin password
    ## ref: https://github.com/bitnami/bitnami-docker-mariadb/blob/master/README.md#setting-the-root-password-on-first-run
    ##
    rootPassword: ""
  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  primary:
    persistence:
      ## @param mariadb.primary.persistence.enabled Enable persistence using Persistent Volume Claims
      ##
      enabled: true
      ## @param mariadb.primary.persistence.storageClass mariadb data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      storageClass:
      ## @param mariadb.primary.persistence.accessMode PVC Access Modes
      ##
      accessMode: ReadWriteOnce
      ## @param mariadb.primary.persistence.size PVC Storage Request
      ##
      size: 8Gi
## PostgreSQL chart configuration
## https://github.com/bitnami/charts/blob/master/bitnami/postgresql/values.yaml
##
postgresql:
  ## @param postgresql.enabled Whether to deploy a PostgreSQL server to satisfy the database requirements
  ##  To use an external database set this to false and configure the externalDatabase parameters
  ##
  enabled: false
  ## @param postgresql.postgresqlDatabase PostgreSQL database
  ## ref: https://github.com/bitnami/bitnami-docker-postgresql/#creating-a-database-on-first-run
  ##
  postgresqlDatabase: bitnami_redmine
  ## @param postgresql.postgresqlUsername PostgreSQL user
  ##
  postgresqlUsername: bn_redmine
  ## @param postgresql.postgresqlPassword PostgreSQL password
  ##
  postgresqlPassword:
  ## @param postgresql.existingSecret In case of postgresql.enabled = true, allow the usage of existing secrets for postgresql
  ##
  existingSecret: ""
  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    ## @param postgresql.persistence.enabled Enable persistence using Persistent Volume Claims
    ##
    enabled: true
    ## @param postgresql.persistence.existingClaim A manually manage Persistent Volume Claim
    ## Requires postgresql.persistence.enable: true
    ## If defined, PVC must be created manually before volume will be bound
    existingClaim:
    ## @param postgresql.persistence.storageClass postgresql data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass:
    ## @param postgresql.persistence.accessMode PVC Access Modes
    ##
    accessMode: ReadWriteOnce
    ## @param postgresql.persistence.size PVC Storage Request
    ##
    size: 8Gi
## All of these values are only used when:
## a) mariadb.enabled is set to false and databaseType=mariadb
## b) postgresql.enabled is set to false and databaseType=postgresql
##
externalDatabase:
  ## @param externalDatabase.host Host of the external database
  ##
  host: ""
  ## @param externalDatabase.name Name of the external database
  ##
  name: bitnami_redmine
  ## @param externalDatabase.user External db user
  ##
  user: bn_redmine
  ## @param externalDatabase.password Password for the db user
  ##
  password: ""
  ## @param externalDatabase.port Database port number
  ##
  port: 3306
  ## @param externalDatabase.existingSecret Use existing secret containing the database password
  ## Must contain the key "postgresql-password" in case that databaseType=postgresql
  ## Must contain the key "mariadb-password" in case that databaseType=mariadb
  existingSecret:

## @section Deployment parameters

## @param updateStrategy.type Update strategy for Deployments. Set to recreate if persistent volume cannot be mounted to move than one pod.
## Example:
## updateStrategy:
##  type: RollingUpdate
##  rollingUpdate:
##    maxSurge: 25%
##    maxUnavailable: 25%
##
updateStrategy:
  type: RollingUpdate
## @param replicas Define the number of pods the deployment will create
## Do not change unless your persistent volume allows more than one writer, ie NFS
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
##
replicas: 1
## SecurityContext configuration
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
## @param containerSecurityContext.enabled Redmine Container securityContext
## @param containerSecurityContext.runAsUser User ID for the Redmine container
##
containerSecurityContext:
  enabled: false
  runAsUser: 0
## @param podSecurityContext.enabled Enable security context for Redmine pods
## @param podSecurityContext.fsGroup Group ID for the volumes of the pod
##
podSecurityContext:
  enabled: false
  fsGroup: 0
## Redmine containers' resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
## We usually recommend not to specify default resources and to leave this as a conscious
## choice for the user. This also increases chances charts run on environments with little
## resources, such as Minikube. If you do want to specify resources, uncomment the following
## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
## @param resources.limits The resources limits for the container
## @param resources.requests The requested resources for the container
##
resources:
  ## Example:
  ## limits:
  ##    cpu: 2
  ##    memory: 1Gi
  limits: {}
  ## Examples:
  ## requests:
  ##    cpu: 1
  ##    memory: 1Gi
  requests: {}
## Pods Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
##
serviceAccount:
  ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
  ##
  create: true
  ## @param serviceAccount.name The name of the ServiceAccount to create
  ## If not set and create is true, a name is generated using the redmine.fullname template
  name:
## @param securityContext Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
securityContext: {}
## @param podAnnotations Additional pod annotations
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}
## @param podLabels Additional pod labels
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
##
podLabels: {}
## @param lifecycleHooks lifecycleHooks for the Redmine container to automate configuration before or after startup.
##
lifecycleHooks: {}
## @param priorityClassName Redmine pods' priority.
## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
##
priorityClassName: ""
## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAffinityPreset: ""
## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAntiAffinityPreset: soft
## Node affinity preset
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
##
nodeAffinityPreset:
  ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ##
  type: ""
  ## @param nodeAffinityPreset.key Node label key to match Ignored if `affinity` is set.
  ## E.g.
  ## key: "kubernetes.io/e2e-az-name"
  ##
  key: ""
  ## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set.
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []
## @param affinity Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
##
affinity: {}
## @param nodeSelector Node labels for pod assignment. Evaluated as a template.
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}
## @param tolerations Tolerations for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []
## Configure extra options for liveness probe
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
## @param livenessProbe.enabled Enable livenessProbe
## @param livenessProbe.path The path against which to perform the livenessProbe
## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
## @param livenessProbe.periodSeconds Period seconds for livenessProbe
## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
## @param livenessProbe.successThreshold Success threshold for livenessProbe
##
livenessProbe:
  enabled: true
  path: /
  initialDelaySeconds: 300
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3
## Configure extra options for readiness probe
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
## @param readinessProbe.enabled Enable readinessProbe
## @param readinessProbe.path The path against which to perform the readinessProbe
## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
## @param readinessProbe.periodSeconds Period seconds for readinessProbe
## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
## @param readinessProbe.successThreshold Success threshold for readinessProbe
##
readinessProbe:
  enabled: true
  path: /
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3
## @param customLivenessProbe Override default liveness probe
##
customLivenessProbe: {}
## @param customReadinessProbe Override default readiness probe
##
customReadinessProbe: {}
## @param initContainers Add init containers to the Redmine pods.
## Example:
## initContainers:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
initContainers: {}
## @param sidecars Add sidecars to the Redmine pods.
## Example:
## sidecars:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
sidecars: {}
## @param containerPorts.http Redmine container HTTP port
##
containerPorts:
  http: 3000

## @section Traffic Exposure parameters

## Kubernetes configuration
##   minikube: NodePort
##   ingress: ClusterIP
##   elsewhere: LoadBalancer
##
service:
  ## @param service.type Kubernetes Service type
  ##
  type: LoadBalancer
  ## @param service.port Service HTTP port
  ##
  port: 80
  ## clusterIP: ""
  ## loadBalancerIP for the Redmine Service (optional, cloud specific)
  ## ref: http://kubernetes.io/docs/user-guide/services/#type-loadbalancer
  ## loadBalancerIP:
  ## @param service.loadBalancerSourceRanges An array of load balancer sources
  ##
  loadBalancerSourceRanges:
    - 0.0.0.0/0
  ## @param service.nodePorts.http Kubernetes http node port
  ## nodePorts:
  ##   http: <to set explicitly, choose port between 30000-32767>
  ##
  nodePorts:
    http: ""
  ## @param service.externalTrafficPolicy Enable client source IP preservation
  ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster
  ## @param service.sessionAffinity Control where client requests go, to the same pod or round-robin
  ## Values: ClientIP or None
  ## ref: https://kubernetes.io/docs/user-guide/services/
  ##
  sessionAffinity: "None"
## Configure the ingress resource that allows you to access the
## Redmine installation. Set up the URL
## ref: http://kubernetes.io/docs/user-guide/ingress/
##
ingress:
  ## @param ingress.enabled Set to true to enable ingress record generation
  ##
  enabled: false
  ## @param ingress.certManager Set this to true in order to add the corresponding annotations for cert-manager
  ##
  certManager: false
  ## @param ingress.hostname When the ingress is enabled, a host pointing to this will be created
  ##
  hostname: redmine.local
  ## @param ingress.path The Path to Redmine. You may need to set this to '/*' in order to use this with ALB ingress controllers
  ##
  path: /
  ## @param ingress.pathType Ingress path type
  ##
  pathType: ImplementationSpecific
  ## @param ingress.apiVersion Override API Version (automatically detected if not set)
  ##
  apiVersion:
  ## @param ingress.tls Enable TLS configuration
  ## TLS certificates will be retrieved from a TLS secret with name: {{- printf "%s-tls" .Values.ingress.hostname }}
  ## You can use the ingress.secrets parameter to create this TLS secret or relay on cert-manager to create it
  ##
  tls: false
  ## @param ingress.annotations [object] Ingress annotations
  ## For a full list of possible ingress annotations,
  ## please see https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
  ##
  ## If certManager is set to true, annotation kubernetes.io/tls-acme: "true" will automatically be set
  ## e.g:
  ## kubernetes.io/ingress.class: nginx
  ##
  annotations:
    ## Keep the connection open with the API server even if idle (the default is 60 seconds)
    ## Setting it to 10 minutes which should be enough for our current use case of deploying/upgrading/deleting apps
    ##
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
  ## @param ingress.extraHosts The list of additional hostnames to be covered with this ingress record.
  ## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array
  ## extraHosts:
  ## - name: redmine.local
  ##   path: /
  ##
  extraHosts: []
  ## @param ingress.extraTls The tls configuration for additional hostnames to be covered with this ingress record.
  ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## extraTls:
  ## - hosts:
  ##     - redmine.local
  ##   secretName: redmine.local-tls
  ##
  extraTls: []
  ## @param ingress.secrets If you're providing your own certificates, please use this to add the certificates as secrets
  ## key and certificate should start with -----BEGIN CERTIFICATE----- or
  ## -----BEGIN RSA PRIVATE KEY-----
  ##
  ## name should line up with a tlsSecret set further up
  ## If you're using cert-manager, this is unneeded, as it will create the secret for you if it is not set
  ##
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  ## e.g:
  ## - name: redmine.local-tls
  ##   key:
  ##   certificate:
  ##
  secrets: []

## @section Persistence parameters

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  ## @param persistence.enabled Enable persistence using PVC
  ##
  enabled: true
  ## @param persistence.existingClaim The name of an existing PVC
  ## Requires persistence.enable: true
  ## If defined, PVC must be created manually before volume will be bound
  existingClaim:
  ## @param persistence.storageClass PVC Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass:
  ## @param persistence.accessModes PVC Access Modes
  ##
  accessModes:
    - ReadWriteOnce
  ## @param persistence.size PVC Storage Request
  ##
  size: 8Gi

## @section Pod Disruption parameters

## Define a disruption budget
## ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
## @param podDisruptionBudget.enabled Pod Disruption Budget toggle
## @param podDisruptionBudget.minAvailable Minimum available pods
## @param podDisruptionBudget.maxUnavailable Maximum unavailable pods
##
podDisruptionBudget:
  enabled: false
  minAvailable:
  maxUnavailable:

## @section Custom Certificates parameters

## Add custom certificates and certificate authorities to redmine container
##
certificates:
  ## @param certificates.customCertificate.certificateSecret Secret containing the certificate and key to add
  ## @param certificates.customCertificate.chainSecret.name Name of the secret containing the certificate chain
  ## @param certificates.customCertificate.chainSecret.key Key of the certificate chain file inside the secret
  ## @param certificates.customCertificate.certificateLocation Location in the container to store the certificate
  ## @param certificates.customCertificate.keyLocation Location in the container to store the private key
  ## @param certificates.customCertificate.chainLocation Location in the container to store the certificate chain
  ##
  customCertificate:
    certificateSecret: ""
    chainSecret:
      name:
      key:
    certificateLocation: /etc/ssl/certs/ssl-cert-snakeoil.pem
    keyLocation: /etc/ssl/private/ssl-cert-snakeoil.key
    chainLocation: /etc/ssl/certs/mychain.pem
  ## @param certificates.customCA Defines a list of secrets to import into the container trust store
  ## e.g:
  ## - secret: custom-CA
  ## - secret: more-custom-CAs
  ##
  customCA: []
  ## @param certificates.image.registry Container sidecar registry
  ## @param certificates.image.repository Container sidecar image repository
  ## @param certificates.image.tag Container sidecar image tag
  ## @param certificates.image.pullPolicy Container sidecar image pull policy
  ## @param certificates.image.pullSecrets Container sidecar image pull secrets
  ##
  image:
    registry: docker.io
    repository: bitnami/bitnami-shell
    tag: 10-debian-10-r112
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param certificates.extraEnvVars Container sidecar extra environment variables (eg proxy)
  ## e.g:
  ## - name: myvar
  ##   value: myval
  ##
  extraEnvVars: []
