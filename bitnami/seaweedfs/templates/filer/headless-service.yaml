{{- /*
Copyright VMware, Inc.
SPDX-License-Identifier: APACHE-2.0
*/}}

{{- if .Values.filer.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ printf "%s-headless" (include "seaweedfs.filer.fullname" .) }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: filer
  {{- if or .Values.filer.service.headless.annotations .Values.commonAnnotations }}
  {{- $annotations := include "common.tplvalues.merge" (dict "values" (list .Values.filer.service.headless.annotations .Values.commonAnnotations) "context" .) }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" $annotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: http
      port: {{ .Values.filer.service.ports.http }}
      {{- if not (eq .Values.filer.service.ports.http .Values.filer.containerPorts.http) }}
      targetPort: {{ .Values.filer.containerPorts.http }}
      {{- end }}
      protocol: TCP
      {{- if and (or (eq .Values.filer.service.type "NodePort") (eq .Values.filer.service.type "LoadBalancer")) (not (empty .Values.filer.service.nodePorts.http)) }}
      nodePort: {{ .Values.filer.service.nodePorts.http }}
      {{- else if eq .Values.filer.service.type "ClusterIP" }}
      nodePort: null
      {{- end }}
    - name: grpc
      port: {{ .Values.filer.service.ports.grpc }}
      {{- if not (eq .Values.filer.service.ports.grpc .Values.filer.containerPorts.grpc) }}
      targetPort: {{ .Values.filer.containerPorts.grpc }}
      {{- end }}
      protocol: TCP
      {{- if and (or (eq .Values.filer.service.type "NodePort") (eq .Values.filer.service.type "LoadBalancer")) (not (empty .Values.filer.service.nodePorts.grpc)) }}
      nodePort: {{ .Values.filer.service.nodePorts.grpc }}
      {{- else if eq .Values.filer.service.type "ClusterIP" }}
      nodePort: null
      {{- end }}
    {{- if .Values.filer.metrics.enabled }}
    - name: tcp-metrics
      port: {{ .Values.filer.service.ports.metrics }}
      {{- if not (eq .Values.filer.service.ports.metrics .Values.filer.containerPorts.metrics) }}
      targetPort: {{ .Values.filer.containerPorts.metrics }}
      {{- end }}
      protocol: TCP
      {{- if and (or (eq .Values.filer.service.type "NodePort") (eq .Values.filer.service.type "LoadBalancer")) (not (empty .Values.filer.service.nodePorts.metrics)) }}
      nodePort: {{ .Values.filer.service.nodePorts.metrics }}
      {{- else if eq .Values.filer.service.type "ClusterIP" }}
      nodePort: null
      {{- end }}
    {{- end }}
    {{- if .Values.filer.service.extraPorts }}
    {{- include "common.tplvalues.render" (dict "value" .Values.filer.service.extraPorts "context" $) | nindent 4 }}
    {{- end }}
  {{- $podLabels := include "common.tplvalues.merge" (dict "values" (list .Values.filer.podLabels .Values.commonLabels) "context" .) | fromYaml }}
  selector: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: filer
{{- end }}
