{{- if .Values.querier.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "thanos.fullname" . }}-querier
  labels: {{- include "thanos.labels" . | nindent 4 }}
    app.kubernetes.io/component: querier
spec:
  replicas: {{ .Values.querier.replicaCount }}
  strategy:
    type: {{ .Values.querier.strategyType }}
    {{- if (eq "Recreate" .Values.querier.strategyType) }}
    rollingUpdate: null
    {{- end }}
  selector:
    matchLabels: {{- include "thanos.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: querier
  template:
    metadata:
      labels: {{- include "thanos.labels" . | nindent 8 }}
        app.kubernetes.io/component: querier
      {{- if .Values.querier.podAnnotations }}
      annotations: {{- include "thanos.tplValue" (dict "value" .Values.querier.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
    spec:
{{- include "thanos.imagePullSecrets" . | nindent 6 }}
      serviceAccount: {{ include "thanos.fullname" . }}-querier
      {{- if .Values.querier.affinity }}
      affinity: {{- include "thanos.tplValue" (dict "value" .Values.querier.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.querier.nodeSelector }}
      nodeSelector: {{- include "thanos.tplValue" (dict "value" .Values.querier.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.querier.tolerations }}
      tolerations: {{- include "thanos.tplValue" (dict "value" .Values.querier.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.querier.priorityClassName }}
      priorityClassName: {{ .Values.querier.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.querier.securityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.querier.securityContext.runAsUser }}
        fsGroup: {{ .Values.querier.securityContext.fsGroup }}
      {{- end }}
      containers:
        - name: querier
          image: {{ include "thanos.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          args:
            - query
            - --log.level={{ .Values.querier.logLevel }}
            - --grpc-address=0.0.0.0:10901
            - --http-address=0.0.0.0:10902
            - --query.replica-label={{ .Values.querier.replicaLabel }}
            {{- range .Values.querier.stores }}
            - --store={{ . }}
            {{- end }}
            {{- if .Values.ruler.enabled }}
            - --store={{ include "thanos.fullname" . }}-ruler.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}:{{ .Values.ruler.service.grpc.port }}
            {{- end }}
            {{- if .Values.storegateway.enabled }}
            - --store={{ include "thanos.fullname" . }}-storegateway.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}:{{ .Values.storegateway.service.grpc.port }}
            {{- end }}
            {{- range $key, $value := .Values.querier.extraFlags }}
            - --{{ $key }}{{ if $value }}={{ $value }}{{ end }}
            {{- end }}
          ports:
            - name: http
              containerPort: 10902
              protocol: TCP
            - name: grpc
              containerPort: 10901
              protocol: TCP
          {{- if .Values.querier.livenessProbe }}
          livenessProbe: {{- toYaml .Values.querier.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.querier.readinessProbe }}
          readinessProbe: {{- toYaml .Values.querier.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.querier.resources }}
          resources: {{- toYaml .Values.querier.resources | nindent 12 }}
          {{- end }}
{{- end }}
