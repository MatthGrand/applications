#!/bin/bash

readonly current_branch="$(git rev-parse --abbrev-ref HEAD)"
readonly origin_commit="$(git rev-parse --short "$(git merge-base master "$current_branch")")"
readonly files_to_push="$(git diff --name-only "$origin_commit")"
failed=0

for chart_name in $( cut -d'/' -f1,2 <<< "$files_to_push" | uniq ); do
    # Avoid running 'helm lint|install' when modified dirs are not charts
    if [[ $chart_name = bitnami/* ]]; then
        printf '\033[01;33mValidating %s with helm lint:\n\033[0m' "$chart_name"
        chart_path="$(git rev-parse --show-toplevel)"/"$chart_name"

        printf '\033[0;34m- Running helm lint %s\n\033[0m' "$chart_path"
        if helm lint "$chart_path"; then
            printf '\033[0;32m\U00002705 helm lint %s\n\n\033[0m' "$chart_path"
        else
            printf '\033[0;31m\U0001F6AB helm lint %s failed. Push cancelled.\n\n\033[0m' "$chart_path"
            failed=1
        fi

        printf '\033\033[0;34m- Running helm template %s\n\033[0m' "$chart_path"
        helm repo add bitnami https://charts.bitnami.com/bitnami >> /dev/null
        helm dependency update "$chart_path" >> /dev/null
        if helm template "$chart_path" >> /dev/null; then
            printf '\033[0;32m\U00002705 helm template %s\n\n\033[0m' "$chart_path"
        else
            printf '\033[0;31m\U0001F6AB helm template %s failed. Push cancelled.\n\n\033[0m' "$chart_path"
            failed=1
        fi
    fi
done

exit $failed
