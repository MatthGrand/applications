image:
  ## Bitnami MongoDB registry
  ##
  registry: bitnami
  ## Bitnami MongoDB image name
  ##
  name: mongodb
  ## Bitnami MongoDB image tag
  ## ref: https://hub.docker.com/r/bitnami/mongodb/tags/
  ##
  tag: 3.7.1-r0

  ## Specify a imagePullPolicy
  ## 'Always' if imageTag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  imagePullPolicy: Always

## Kubernetes service type
serviceType: ClusterIP

port: 27017

replicaSet:
  ## Whether to create a MongoDB replica set for high availability or not
  enabled: false
  ## Name of the replica set
  ##
  replicaSetName: rs0
  ## Number of replicas per each node type
  ## 
  replicas:
    secondary: 1
    arbiter: 1
  ## Pod Disruption Budget
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
  pdb:
    minAvailable:
      primary: 1
      secondary: 1
      arbiter: 1

auth:
  ## Whether to enable authentication for MongoDb or not.
  enabled: false
  ## MongoDB admin password
  ## ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#setting-the-root-password-on-first-run
  ##
  # mongodbRootPassword: 

  ## MongoDB custom user and database
  ## ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#creating-a-user-and-database-on-first-run
  ##
  # mongodbUsername: username
  # mongodbPassword: password
  # mongodbDatabase: database
  # replicaSetKey: key
  # existingAdminSecret: name-of-existing-secret

# Annotations to be added to MongoDB pods
podAnnotations: {}

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources: {}
# limits:
#   cpu: 500m
#   memory: 512Mi
# requests:
#   cpu: 100m
#   memory: 256Mi

## Node selector
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
nodeSelector: {}

## Affinity
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

## Tolerations
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: true
  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  ## mongodb data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessModes:
    - ReadWriteOnce
  size: 8Gi
  annotations: {}

## Configure extra options for liveness and readiness probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
livenessProbe:
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
readinessProbe:
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

# Entries for the MongoDB config file
configmap:
 # # mongod.conf
 # # mounted from configmap
 # # for documentation of all options, see:
 # #   http://docs.mongodb.org/manual/reference/configuration-options/
 # # Where and how to store data.
 # storage:
 #   dbPath: /opt/bitnami/mongodb/data/db
 #   journal:
 #     enabled: true
 # # where to write logging data.
 # systemLog:
 #   destination: file
 #   logAppend: true
 #   path:
 # # network interfaces
 # net:
 #   port: 27017
 #   bindIp: 0.0.0.0
 #   unixDomainSocket:
 #     enabled: true
 #     pathPrefix: /opt/bitnami/mongodb/tmp
 # # replica set options
 # replication:
 #   replSetName: rs0
 # # process management options
 # processManagement:
 #    fork: false
 #    pidFilePath: /opt/bitnami/mongodb/tmp/mongodb.pid
 # # set parameter options
 # setParameter:
 #    enableLocalhostAuthBypass: true
 # # security options
 # security:
 #   authorization: disabled
 #   #keyFile: replace_me