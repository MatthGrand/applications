## Bitnami Tomcat image version
## ref: https://hub.docker.com/r/bitnami/tomcat/tags/
##
image: bitnami/tomcat:9.0.0.M21-r0

## Specify a imagePullPolicy
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
##
imagePullPolicy: IfNotPresent

## Admin user
## ref: https://github.com/bitnami/bitnami-docker-tomcat#creating-a-custom-user
##
tomcatUsername: user

## Admin password
## ref: https://github.com/bitnami/bitnami-docker-tomcat#creating-a-custom-user
##
# tomcatPassword:

## Kubernetes configuration
## For minikube, set this to NodePort, elsewhere use LoadBalancer
##
serviceType: LoadBalancer

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: true
  ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
  ## Default: volume.alpha.kubernetes.io/storage-class: default
  ##
  # storageClass:
  accessMode: ReadWriteOnce
  size: 8Gi

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  requests:
    memory: 512Mi
    cpu: 300m

## Volume Info
## deployDir - The Tomcat webapps deployment directory for this image?
## name: Volume name to mount to each container
webappsVolume:
  deployDir: /bitnami/tomcat/data
  name: tomcat-data

## Additional Volume info.
## Usually used to override conf files`
# additionalVolumes:
# - name: confs
#     configMap:
#       name: tomcat-config

## Init Containers for WAR file
## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
##
# initContainers:
# - name: sample
#   image: resouer/sample
#   tag: v2
#   imagePullPolicy: IfNotPresent
#   imageWarFileLoc: /sample.war
#   imageWarDest: sample.war
#   command: ["cp", "sample.war", "/app/"]
#   volumeMounts:
#   - mountPath: /app
#     mountName: tomcat-data

## Additional sidecar containers. Will be copied in as is
## ref: https://github.com/kubernetes/kubernetes/tree/master/examples/javaweb-tomcat-sidecar
## Might be beneficial if you want to keep the container running for a test setup that pulls from github
# sidecarContainers:

## Volume Mounts within the tomcat container
## name - Which volume to mountPath
## mountPath: where do you want it mounted
## subPath: If using configMap, the singular file if only mounting files.
##
# tomcatVolumeMounts:
# - name: confs
#   mountPath: /bitnami/tomcat/conf/server.xml
#   subPath: server.xml
# - name: confs
#   mountPath: /bitnami/tomcat/conf/web.xml
#   subPath: web.xml
# - name: confs
#   mountPath: /bitnami/tomcat/conf/tomcat-users.xml
#   subPath: tomcat-users.xml
# - name: confs
#   mountPath: /bitnami/tomcat/conf/context.xml
#   subPath: context.xml
# - name: confs
#   mountPath: /bitnami/tomcat/conf/catalina.properties
#   subPath: catalina.properties
# - name: confs
#   mountPath: /bitnami/tomcat/conf/catalina.policy
#   subPath: catalina.policy
# - name: confs
#   mountPath: /bitnami/tomcat/conf/logging.properties
#   subPath: logging.properties
# - name: confs
#   mountPath: /bitnami/tomcat/conf/jaspic-providers.xml
#   subPath: jaspic-providers.xml
